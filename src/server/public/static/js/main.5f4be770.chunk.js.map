{"version":3,"sources":["components/navigation/Nav.js","components/orders/JoinDialogSurface.js","components/orders/JoinDialog.js","components/orders/OrderCard.js","pages/Orders.js","components/order-details/DetailContent.js","pages/OrderDetails.js","components/orders/CreateReciept.js","components/orders/PayOrderContent.js","pages/PayOrder.js","components/dishes/DishDialog.js","components/dishes/DishCard.js","pages/Dishes.js","components/settings/GlobalSettings.js","components/settings/DishTypeDialog.js","components/settings/DishTypes.js","pages/Settings.js","pages/History.js","App.js","serviceWorker.js","stores/Store.js","index.js"],"names":["Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searching","searchText","modalOpen","toggleSearch","bind","assertThisInitialized","handleSearchText","onClick","setState","_this2","e","target","value","store","_this3","react_default","a","createElement","top_app_bar","dense","fixed","className","alignStart","placeholder","autoFocus","onChange","aria-label","icon","alt","Fragment","kitchenMode","alignEnd","drawer","modal","open","onClose","list","Link","to","Component","inject","observer","JOIN","gql","_templateObject","JoinOrderSurface","people","handleJoin","joinOrders","newProps","oldProps","JSON","stringify","data","map","o","i","id","_id","name","selected","length","join","_this4","ordersToJoin","filter","s","variables","ids","_this5","dialog","table","p","key","action","react_apollo_browser_umd","mutation","isDefaultAction","JoinOrder","standardDialogOpen","query","JoinDialog_templateObject","pollInterval","_ref","loading","error","orders","evt","JoinDialogSurface_JoinOrderSurface","assign","title","concat","body","card","MADE","OrderCard_templateObject","OrderCard","handleDishMade","made","dishes","d","dish","hasPayed","style","padding","Typography","use","tag","theme","v","notes","JoinDialog_JoinOrder","Order","matchesFilter","RegExp","Orders_templateObject","result","lib_default","toString","test","some","type","order","width","maxWidth","minWidth","OrderCard_OrderCard","linear_progress","determinate","console","warn","fab","AddOrder","DetailContent_templateObject","UpdateOrder","_templateObject2","DetailContent","activeTabIndex","dishTypes","addDish","removeDish","changeTextField","forEach","push","splice","field","keys","grid","span","String","tabs","onActivate","detail","index","chip","text","ripple","textfield","withLeadingIcon","label","min","inputMode","pattern","textarea","fullwidth","addOrUpdate","_rmwc_button","history","goBack","OrderDetails","OrderDetails_templateObject","DetailContent_DetailContent","match","params","elevation","z","toolbar","OrderDetails_templateObject2","_ref2","graphQLErrors","_ref3","message","fetchData","CreateReceipt","totalCosts","reduce","c","cost","toFixed","Date","toLocaleString","PAY","PayOrderContent_templateObject","PayOrderContent","paying","selectAll","changePayment","toggleSelection","toggleAll","saveFile","every","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","isNaN","dishesToPay","blob","Blob","FileSaver","saveAs","toUTCString","total","basename","disabled","invalid","pay","payedDishes","PayOrder","PayOrder_templateObject","PayOrderContent_PayOrderContent","ADD","DishDialog_templateObject","UPDATE","DishDialog_templateObject2","REMOVE","_templateObject3","DishDialog","handleNameChange","handleCostChange","handleTypeChange","_rmwc_select","options","remove","toggleDialog","secondaryText","meta","DishCard","margin","typeName","twoLine","DishDialog_DishDialog","Dishes","xs","func","rv","x","Dishes_templateObject","Dishes_templateObject2","grouped","groupBy","groupedDishes","group","DishCard_DishCard","GlobalSettings","setKitchenMode","DishTypeDialog_templateObject","DishTypeDialog_templateObject2","DishTypeDialog_templateObject3","DishTypeDialog","TextField","List","Toolbar","DishTypes","DishTypeDialog_DishTypeDialog","DishTypes_templateObject","Settings","settings_GlobalSettings","DishTypes_DishTypes","History","menuIsOpen","minOrderTimestamp","header","setHistoryFilter","getMonday","day","getDay","diff","getDate","setDate","timestamp","toISOString","tmsp","toDateString","History_templateObject","ordered","menu","onSelect","_","downloadData","App","components_navigation_Nav","Route","exact","path","component","Orders","Hist","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","Store","localStorage","getItem","isOn","setItem","decorate","observable","DefaultStore","client","ApolloClient","stores","ReactDOM","render","primary","secondary","background","index_module","HashRouter","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5f4be770.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport {\r\n  TopAppBar,\r\n  TopAppBarRow,\r\n  TopAppBarSection,\r\n  TopAppBarActionItem,\r\n  TopAppBarTitle,\r\n  TopAppBarNavigationIcon\r\n} from '@rmwc/top-app-bar'\r\nimport {\r\n  List,\r\n  ListItemGraphic,\r\n  ListItem,\r\n  ListItemText\r\n} from '@rmwc/list';\r\nimport {\r\n  Drawer,\r\n  DrawerHeader,\r\n  DrawerContent,\r\n  DrawerTitle\r\n} from '@rmwc/drawer';\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nimport './Nav.css'\r\n\r\nclass Nav extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      searching: false,\r\n      searchText: \"\",\r\n      modalOpen: false\r\n    }\r\n\r\n    this.toggleSearch = this.toggleSearch.bind(this)\r\n    this.handleSearchText = this.handleSearchText.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n  }\r\n\r\n  \r\n  onClick(){\r\n    this.setState({ modalOpen: !this.state.modalOpen })\r\n  }\r\n  handleSearchText(){\r\n    return (e)=>{\r\n      this.setState({\r\n        searchText: e.target.value\r\n      })\r\n      this.props.store.searchText = e.target.value\r\n    }\r\n  }\r\n\r\n  toggleSearch(){\r\n    this.setState({ searching: !this.state.searching, searchText: \"\" })\r\n    this.props.store.searchText = \"\"\r\n  }\r\n\r\n  render(){\r\n    const { toggleSearch, onClick } = this \r\n    if (this.state.searching)\r\n      return (\r\n        <TopAppBar dense fixed>\r\n          <TopAppBarRow>\r\n            <TopAppBarSection className=\"search-field\" alignStart>\r\n              <input placeholder=\"Search\" autoFocus value={this.state.searchText} onChange={this.handleSearchText()}/>\r\n              <TopAppBarActionItem aria-label=\"Search\" icon=\"clear\" alt=\"Search this Page\" onClick={toggleSearch}/>\r\n            </TopAppBarSection>          \r\n          </TopAppBarRow>\r\n       </TopAppBar>\r\n      )\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <TopAppBar dense fixed>\r\n        <TopAppBarRow>\r\n          <TopAppBarSection alignStart>\r\n            <TopAppBarNavigationIcon icon=\"menu\" onClick={onClick}/>\r\n            <TopAppBarTitle>{this.props.store.kitchenMode ? \"BIt's Kitchen\" : \"BIt\"}</TopAppBarTitle>\r\n          </TopAppBarSection>\r\n          <TopAppBarSection alignEnd>\r\n            <TopAppBarActionItem aria-label=\"Search\" icon=\"search\" alt=\"Search this Page\" onClick={toggleSearch}/>\r\n          </TopAppBarSection>\r\n        </TopAppBarRow>\r\n      </TopAppBar>\r\n\r\n      <Drawer\r\n          modal\r\n          open={this.state.modalOpen}\r\n          onClose={() => this.setState({ modalOpen: false })}\r\n        >\r\n          <DrawerHeader>\r\n            <DrawerTitle>Menu</DrawerTitle>\r\n          </DrawerHeader>\r\n          <DrawerContent>\r\n            <List>\r\n              <Link to=\"/orders\">\r\n                <ListItem onClick={onClick}>\r\n                  <ListItemGraphic icon=\"shopping_cart\" />\r\n                  <ListItemText>Orders</ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"/orderHistory\">\r\n              <ListItem onClick={onClick}>\r\n                <ListItemGraphic icon=\"history\"/>\r\n                <ListItemText>History</ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"/dishes\">\r\n              <ListItem onClick={onClick}>\r\n                <ListItemGraphic icon = \"shopping_basket\" />\r\n                <ListItemText>Dishes</ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"/settings\">\r\n              <ListItem onClick={onClick}>\r\n                <ListItemGraphic icon=\"settings\" />  \r\n                <ListItemText>Settings</ListItemText>\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Nav))","import React, { Component } from 'react'\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic,\r\n} from '@rmwc/list';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nconst JOIN = gql`\r\n  mutation join($id: ID!, $ids: [ID]!){\r\n    joinOrders(_id: $id, orderIds: $ids){\r\n      _id,\r\n      name,\r\n      table,\r\n      dishes {\r\n        dish {\r\n          _id,\r\n          name,\r\n          cost\r\n        },\r\n        made,\r\n        hasPayed\r\n      }\r\n    }\r\n  }`\r\n\r\nexport default class JoinOrderSurface extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.handleJoin = this.handleJoin.bind(this)\r\n    this.joinOrders = this.joinOrders.bind(this)\r\n  }\r\n  \r\n  state = {\r\n    people: []\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps){\r\n    if (JSON.stringify(newProps) !== JSON.stringify(oldProps))\r\n      this.setState({\r\n        people: newProps.data.map((o, i) => { return { id: o._id, name: o.name, selected: (this.state.people.length > i ? this.state.people[i].selected : false) } })\r\n      })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      people: this.props.data.map(o => {return {id: o._id, name: o.name, selected: false}})\r\n    })\r\n  }\r\n\r\n  handleJoin(i){\r\n    return () => {\r\n      const selected = this.state.people\r\n      selected[i].selected = !selected[i].selected\r\n      this.setState({\r\n        people: selected\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n  joinOrders(join){\r\n    return () => {\r\n      const ordersToJoin = this.state.people.filter(s => s.selected).map(s => s.id)\r\n      join({variables: {id: this.props._id, ids: ordersToJoin}})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <DialogTitle>Everyone at table {this.props.table}</DialogTitle>\r\n        < DialogContent >\r\n          <List>\r\n          {\r\n            this.state.people.map((p, i) => \r\n                <ListItem key={p.id} onClick={this.handleJoin(i)}>\r\n                <ListItemGraphic icon={p.selected ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n                <ListItemText>{ p.name }</ListItemText>\r\n              </ListItem>\r\n            )\r\n          }\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <DialogButton action=\"close\">Cancel</DialogButton >\r\n          <Mutation mutation={JOIN}>\r\n            {(join) => \r\n              <DialogButton action=\"accept\" onClick={this.joinOrders(join)} isDefaultAction>Join</DialogButton >\r\n            }\r\n            </Mutation>\r\n        </DialogActions>\r\n      </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {\r\n  Dialog,\r\n  SimpleDialog\r\n} from '@rmwc/dialog';\r\nimport {\r\n  CardAction\r\n} from '@rmwc/card';\r\n\r\nimport JoinDialogSurface from \"./JoinDialogSurface\"\r\n\r\nexport default class JoinOrder extends Component {\r\n  state = {\r\n    standardDialogOpen: false\r\n  }\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n        <Query\r\n          query={gql`\r\n                query order($table: Int) {\r\n                  orders(table: $table, hasPayed: false) {\r\n                    _id,\r\n                    name,\r\n                  }\r\n                }`} variables={{ table: this.props.table }} pollInterval={5000}>\r\n          {({ loading, error, data }) => {\r\n            if (!loading && !error && data && data.orders)\r\n              return(\r\n              <Dialog\r\n                open={this.state.standardDialogOpen}\r\n                onClose={evt => this.setState({ standardDialogOpen: false })}\r\n              >\r\n                  <JoinDialogSurface data={data.orders.filter(o => o._id !== this.props._id)} {...this.props}/>\r\n              </Dialog>)\r\n            return (\r\n              <SimpleDialog\r\n                title={`Everyone at table ${this.props.table}`}\r\n                body=\"Fetching Data\"\r\n                open={this.state.standardDialogOpen}\r\n                onClose={evt => this.setState({ standardDialogOpen: false })}\r\n              />\r\n            )\r\n\r\n          }}\r\n        </Query>\r\n      <CardAction\r\n          onClick={evt => this.setState({ standardDialogOpen: true })}\r\n        >\r\n          Join\r\n      </CardAction>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardPrimaryAction,\r\n  CardAction,\r\n  CardActions,\r\n  CardActionButtons,\r\n  CardActionIcons\r\n} from '@rmwc/card';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic\r\n} from '@rmwc/list';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Typography } from 'rmwc/Typography';\r\n\r\nimport JoinOrder from './JoinDialog'\r\n\r\nimport './card.css'\r\n\r\nconst MADE = gql`\r\n  mutation updateOrder($id: ID!, $dishes: [orderDishMutation]!){\r\n    updateOrder(_id: $id, dishes: $dishes){\r\n      _id,\r\n      name,\r\n      table,\r\n      notes,\r\n      dishes {\r\n        dish {\r\n          _id,\r\n          name,\r\n          cost\r\n        },\r\n        made,\r\n        hasPayed\r\n      }\r\n    }\r\n  }`\r\n\r\nexport default class OrderCard extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleDishMade = this.handleDishMade.bind(this)\r\n  }\r\n\r\n  handleDishMade(id, i, made){\r\n    return () => {\r\n      const dishes = this.props.dishes.map(d => {return {id: d.dish._id, made: d.made, hasPayed: d.hasPayed}})\r\n      dishes[i].made = !dishes[i].made\r\n      made({variables: {\r\n        id: id, \r\n        dishes: dishes\r\n      }})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.props\r\n    return (\r\n      <Card>\r\n        <Link to={`/orderDetails/${props._id}`}>\r\n          <CardPrimaryAction>\r\n            <div style={{ padding: '0 1rem 1rem 1rem' }}>\r\n              <Typography use=\"headline6\" tag=\"h2\" style={{}}>\r\n                <span className=\"highlight\">{props.table}</span> {props.name}\r\n              </Typography>\r\n            </div>\r\n          </CardPrimaryAction>\r\n        </Link>\r\n        <div style={{ padding: '0 1rem 1rem 1rem' }}>\r\n          <Mutation mutation={MADE}>\r\n            {(made) => \r\n                <Typography use=\"body1\" tag=\"div\" theme=\"text-secondary-on-background\">\r\n                <List>\r\n                  {props.dishes.map((v, i) =>\r\n                    <ListItem key={i} onClick={this.handleDishMade(props._id, i, made)}>\r\n                      <ListItemGraphic icon={v.made ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n                      <ListItemText>{v.dish.name}</ListItemText>\r\n                    </ListItem>\r\n                  )}\r\n                </List>\r\n              </Typography>\r\n            }\r\n          </Mutation>\r\n        </div>\r\n        <Typography\r\n          use=\"subtitle1\"\r\n          tag=\"div\"\r\n          style={{ padding: '0.5rem 1rem' }}\r\n          theme=\"text-secondary-on-background\"\r\n        >\r\n          {this.props.notes}\r\n        </Typography>\r\n        <CardActions>\r\n          <CardActionButtons>\r\n            <JoinOrder {...this.props}/>\r\n          </CardActionButtons>\r\n          <CardActionIcons>\r\n            <Link to={`/payOrder/${props._id}`}>\r\n              <CardAction icon=\"credit_card\" />\r\n            </Link>\r\n          </CardActionIcons>\r\n        </CardActions>\r\n      </Card>)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Fab } from '@rmwc/fab';\r\nimport Masonry from 'react-masonry-component';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport OrderCard from '../components/orders/OrderCard'\r\nimport { observer, inject } from \"mobx-react\"\r\nimport { LinearProgress } from '@rmwc/linear-progress'\r\n\r\nclass Order extends Component {\r\n  render() {\r\n    const filter = this.props.store.searchText\r\n    const matchesFilter = new RegExp(filter, \"i\")\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Query\r\n          query={gql`query order($hasPayed: Boolean) {\r\n              orders(hasPayed: $hasPayed) {\r\n                _id,\r\n                name,\r\n                table,\r\n                notes,\r\n                dishes {\r\n                  dish {\r\n                    _id,\r\n                    name,\r\n                    cost,\r\n                    type {\r\n                      _id,\r\n                      name\r\n                    }\r\n                  },\r\n                  made,\r\n                  hasPayed\r\n                }\r\n              }\r\n            }`}\r\n          variables={{ hasPayed: false }}\r\n          pollInterval={500}>\r\n          {({ loading, error, data }) => {\r\n            if (!data || !data.orders)\r\n              data = {orders: []}\r\n            let result = <Masonry id=\"masonry-layout\">\r\n              {\r\n                data.orders.filter(o => {\r\n                  return (!filter || (o.table.toString() === filter) || matchesFilter.test(o.name) || o.dishes.some(d => matchesFilter.test(d.dish.type.name))) &&\r\n                    (!this.props.store.kitchenMode || o.dishes.some(d => !d.made))\r\n                }).map((order, i) => {\r\n\r\n                  return (<div\r\n                    key={i}\r\n                    style={{\r\n                      width: '-webkit-fill-available',\r\n                      maxWidth: '500px',\r\n                      minWidth: '320px'\r\n                    }}>\r\n                    <OrderCard key={order._id} {...order} {...this.props} />\r\n                    \r\n                  </div>)\r\n                })\r\n              }\r\n            </Masonry>\r\n\r\n            if (loading) result = \r\n              <React.Fragment>\r\n                <LinearProgress determinate={false}></LinearProgress>\r\n                {result}\r\n              </React.Fragment>\r\n            if (error){\r\n              console.warn(error)\r\n              return <p>Error :(</p>;\r\n            } \r\n\r\n            return result\r\n            \r\n          }}\r\n        </Query>\r\n\r\n        <Link to=\"/orderDetails\">\r\n          <Fab className=\"floating-right\" icon=\"add\" />\r\n        </Link>\r\n        <div className=\"bottomSpacer\"/>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Order))","import React, { Component } from 'react'\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\nimport { TabBar, Tab } from '@rmwc/tabs';\r\nimport { Chip, ChipSet } from '@rmwc/chip';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic\r\n} from '@rmwc/list';\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Button } from '@rmwc/button';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\n\r\nimport './Details.css'\r\n\r\nconst AddOrder = gql`\r\n  mutation addOrder($name: String, $table: Int!, $notes: String, $dishes: [orderDishMutation]!){\r\n    addOrder(table: $table, name: $name, dishes: $dishes, notes: $notes){\r\n      _id, \r\n      name,\r\n      table,\r\n      notes\r\n    }\r\n  }\r\n`;\r\n\r\nconst UpdateOrder = gql`\r\n  mutation updateOrder($id: ID!, $name: String, $table: Int, $notes: String, $dishes: [orderDishMutation]){\r\n    updateOrder(_id: $id, table: $table, name: $name, dishes: $dishes, notes: $notes ){\r\n      _id, \r\n      name,\r\n      table,\r\n      notes\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class DetailContent extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.addDish = this.addDish.bind(this)\r\n    this.removeDish = this.removeDish.bind(this)\r\n    this.changeTextField = this.changeTextField.bind(this)\r\n  }\r\n\r\n\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    table: 0, \r\n    notes : \"\",\r\n    dishes: [],\r\n    activeTabIndex: 0,\r\n    dishTypes: {}\r\n  } \r\n\r\n  componentDidMount(){\r\n    if (this.props.order)\r\n      this.setState({\r\n        id: this.props.order._id,\r\n        name: this.props.order.name,\r\n        table: this.props.order.table,\r\n        notes: this.props.order.notes,\r\n        dishes: this.props.order.dishes.map(d => {return {dish: {id: d.dish._id, name: d.dish.name }, made: d.made, hasPayed: d.hasPayed}})\r\n      })\r\n      \r\n    const dishTypes = this.state.dishTypes\r\n     this.props.dishes.forEach(d => {\r\n      if (dishTypes[d.type.name]){\r\n        dishTypes[d.type.name].push(d)\r\n      } else {\r\n        dishTypes[d.type.name] = [d]\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      dishTypes: dishTypes\r\n    })\r\n  }\r\n\r\n  addDish(id, name){\r\n    return () => {\r\n      const dishes = [{ dish: { id, name }, made: false, hasPayed: false }].concat(this.state.dishes)\r\n      this.setState(\r\n        {\r\n          dishes: dishes\r\n        })\r\n    }\r\n  }\r\n\r\n  removeDish(id){\r\n    return () => {\r\n      let dishes = this.state.dishes\r\n      if (dishes.length === 1)\r\n        dishes = []\r\n      else \r\n        dishes.splice(id, 1)\r\n      this.setState({ dishes: dishes})\r\n    }\r\n  }\r\n\r\n  changeTextField(field){\r\n    return (e) =>{\r\n      const state = {}\r\n      state[field] = e.target.value\r\n      this.setState(state)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const keys = Object.keys(this.state.dishTypes)\r\n    return (\r\n      <React.Fragment>\r\n      <Grid className=\"order-details\">\r\n        <GridCell span=\"12\">\r\n          { keys.length === 0 ? String() : \r\n              <TabBar\r\n                activeTabIndex={this.state.activeTabIndex}\r\n                onActivate={evt => {\r\n                  this.setState({ 'activeTabIndex': evt.detail.index })\r\n                }}\r\n              >\r\n                {keys.map((v, i) => <Tab key={i}>{v}</Tab>)}\r\n              </TabBar>\r\n          }\r\n            <ChipSet>\r\n              {(this.state.dishTypes[keys[this.state.activeTabIndex]] || []).map((v, i) =>\r\n                <Chip key={i} onClick={this.addDish(v._id, v.name)} text={v.name}/>\r\n              )}\r\n            </ChipSet>  \r\n\r\n        </GridCell>\r\n      </Grid>\r\n      <Grid className=\"order-details\">\r\n        <GridCell span=\"6\">\r\n          <List>\r\n              {this.state.dishes.map((v, i) => {\r\n                if (v.hasPayed || v.made)\r\n                  return (<ListItem key={i} ripple={false}>\r\n                    <ListItemGraphic icon={v.hasPayed ? \"attach_money\" : \"done\"} />\r\n                    <ListItemText>{v.dish.name}</ListItemText>\r\n                  </ListItem>)\r\n                return (\r\n                <ListItem key={i} onClick={this.removeDish(i)}>\r\n                  <ListItemGraphic icon=\"remove\" />\r\n                  <ListItemText>{v.dish.name}</ListItemText>\r\n                </ListItem>)\r\n              }\r\n              )}\r\n          </List>\r\n        </GridCell>\r\n        <GridCell span=\"6\">\r\n            <TextField withLeadingIcon=\"event_seat\" label=\"Table\" type=\"number\" min=\"0\" inputMode=\"numeric\" pattern=\"\\d*\" value={this.state.table} onChange={this.changeTextField(\"table\")} />\r\n            <TextField withLeadingIcon=\"account_circle\" label=\"Name\" value={this.state.name} onChange={this.changeTextField(\"name\")} />\r\n            <TextField textarea fullwidth label=\"Notes\" type=\"number\" value={this.state.notes} onChange={this.changeTextField(\"notes\")} />\r\n        </GridCell>\r\n      </Grid>\r\n      <Mutation mutation={this.props.id ? UpdateOrder : AddOrder}>\r\n      {(addOrUpdate, {data, loading, error}) => {\r\n          let result = <Button onClick={() => addOrUpdate({\r\n            variables: {\r\n              id: this.state.id,\r\n              table: this.state.table,\r\n              name: this.state.name,\r\n              notes: this.state.notes,\r\n              dishes: this.state.dishes.map(d => { return { id: d.dish.id, made: d.made, hasPayed: d.hasPayed} }).filter(d => d && d.id)\r\n            }\r\n          })} theme=\"secondary\">Save</Button>\r\n\r\n          if (loading) \r\n            result = \r\n            <React.Fragment>\r\n              <LinearProgress determinate={false}></LinearProgress>\r\n              {result}\r\n            </React.Fragment>\r\n          if (error) console.error(error);\r\n\r\n          if (data) this.props.history.goBack()\r\n\r\n          return result\r\n        }}\r\n        </Mutation>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar';\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\n\r\nimport DetailContent from \"../components/order-details/DetailContent\"\r\n\r\n\r\nexport default class OrderDetails extends Component {\r\n  fetchData(id, dishes){\r\n    return <Query\r\n      query={gql`\r\n        query order($id: ID) {\r\n          orders(_id: $id) {\r\n            _id,\r\n            name,\r\n            table,\r\n            notes,\r\n            dishes {\r\n              dish {\r\n                _id,\r\n                name\r\n              }, \r\n              made,\r\n              hasPayed,\r\n            }\r\n          }\r\n        }`} variables={{ id }}>\r\n      {({ loading, error, data }) => {\r\n\r\n        if (loading) return <LinearProgress determinate={false}></LinearProgress>;\r\n        if (error) return <p>Error :(</p>; \r\n\r\n        return <DetailContent order={data.orders[0]} dishes={dishes} id history={this.props.history} />\r\n      }}\r\n    </Query>      \r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Order Details</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <ToolbarIcon icon=\"clear\" onClick={() => this.props.history.goBack()}/>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n\r\n        <Query\r\n          query={gql`\r\n            {\r\n              dishes {\r\n                _id,\r\n                name,\r\n                type {\r\n                  _id,\r\n                  name\r\n                }\r\n              }\r\n            }`}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <LinearProgress determinate={false}></LinearProgress>;\r\n            if (error) {\r\n              return <p>Error :( <br /><br />{error.graphQLErrors.map(({ message }, i) => (\r\n              <span key={i}>{message}</span>))}</p>\r\n            };\r\n\r\n            if (id){\r\n              return this.fetchData(id, data.dishes)\r\n            }\r\n            return <DetailContent dishes={data.dishes} history={this.props.history}/>\r\n\r\n          }} \r\n\r\n          </Query>\r\n      </Elevation>\r\n      )\r\n  }\r\n}","function CreateReceipt(dishes) {\r\n  let result = \"\"\r\n  const totalCosts = dishes.reduce((a, c) => a + c.cost, 0).toFixed(2)\r\n  dishes.forEach(d => {\r\n    result += `  \r\n        <tr>\r\n          <td>${d.name}</td>\r\n          <td>${d.cost.toFixed(2)}</td>\r\n        </tr>`\r\n  })\r\n  return `\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <body>\r\n    <h1>Receipt</h1>\r\n    <h3>${new Date().toLocaleString()}</h3>\r\n    <p>\r\n      <table>\r\n        <tr>\r\n          <th></th>\r\n          <th>Amount</th>\r\n        </tr>\r\n        ${ result }\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total</td>\r\n          <td>${totalCosts}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Tax</td>\r\n          <td>${(totalCosts - (totalCosts/1.19)).toFixed(2)}</td>\r\n        </tr>\r\n      </table>\r\n    </p>\r\n  </body>\r\n</html>`\r\n}\r\n\r\nexport default CreateReceipt;","import React, { Component } from 'react'\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Button, ButtonIcon } from '@rmwc/button';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\n\r\nimport CreateReceipt from './CreateReciept'\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic,\r\n  ListItemMeta,\r\n  ListDivider\r\n} from '@rmwc/list';\r\n\r\nimport FileSaver from \"filesaver.js-npm\"\r\n\r\nconst PAY = gql`\r\n  mutation pay($id: ID!, $dishes: [orderDishMutation]!){\r\n    updateOrder(_id: $id, dishes: $dishes){\r\n      _id\r\n    }\r\n  }`\r\n\r\nexport default class PayOrderContent extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.changePayment = this.changePayment.bind(this)\r\n    this.toggleSelection = this.toggleSelection.bind(this)\r\n    this.toggleAll = this.toggleAll.bind(this)\r\n    this.saveFile = this.saveFile.bind(this)\r\n  }\r\n  state = {\r\n    dishes: [],\r\n    paying: 0,\r\n    selectAll: true\r\n  }\r\n\r\n  toggleSelection(i){\r\n    return () => {\r\n      const dishes = this.state.dishes\r\n      dishes[i].paying = !dishes[i].paying\r\n      this.setState({\r\n        dishes: dishes,\r\n        selectAll: dishes.every(d => d.paying)\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleAll() {\r\n    const selected = !this.state.selectAll\r\n    const dishes = this.state.dishes\r\n\r\n    for (const dish of dishes) {\r\n      dish.paying = selected\r\n    }\r\n\r\n    this.setState({\r\n      dishes: dishes,\r\n      selectAll: selected\r\n    })\r\n  }\r\n\r\n  changePayment(){\r\n    return (e) => {\r\n      if (!isNaN(e.target.value))\r\n        this.setState({ paying: e.target.value})\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.setState({\r\n      dishes: this.props.dishesToPay\r\n    })\r\n  }\r\n\r\n  saveFile(data){\r\n    const blob = new Blob([CreateReceipt(data)], {\r\n        type: \"text/plain;charset=utf-8\"\r\n      })\r\n    FileSaver.saveAs(blob, `Receipt ${new Date().toUTCString()}.html`, true)\r\n  }\r\n\r\n  render(){\r\n    let total = 0\r\n    return (\r\n      <React.Fragment>\r\n        <List>\r\n          <ListItem key={-1} onClick={this.toggleAll}>\r\n            <ListItemGraphic icon={this.state.selectAll ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n            <ListItemText>Everything</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListDivider />\r\n          {this.state.dishes.map((v, i) => {\r\n            if (v.paying)\r\n              total = v.dish.cost + total \r\n          \r\n            return (\r\n            <ListItem key={i} onClick={this.toggleSelection(i)}>\r\n              <ListItemGraphic icon={v.paying ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n              <ListItemText>{v.dish.name}</ListItemText>\r\n              <ListItemMeta tag=\"span\" basename=\"\">{v.dish.cost.toFixed(2)}</ListItemMeta>\r\n            </ListItem>)\r\n          })}\r\n        \r\n        </List>\r\n        <Grid>\r\n          <GridCell span=\"12\">\r\n            <TextField withLeadingIcon=\"euro_symbol\" disabled label=\"Total\" value={total.toFixed(2)} />\r\n            <TextField withLeadingIcon=\"euro_symbol\" label=\"Difference\" value={(this.state.paying - total).toFixed(2)} onChange={() => {}} invalid={this.state.paying - total < 0} />\r\n            <TextField withLeadingIcon=\"euro_symbol\" label=\"Paying\" type=\"number\" inputMode=\"numeric\" pattern=\"\\d*.*,*\\d*\" value={this.state.paying} onChange={this.changePayment()}/>\r\n          </GridCell>\r\n        </Grid>\r\n        <Mutation mutation={PAY}>\r\n          {(pay, { data, loading, error }) => {\r\n            let result = <Button onClick={() => {\r\n              pay({\r\n              variables: {\r\n                id: this.props.id,\r\n                  dishes: this.state.dishes.map(d => { return { id: d.dish._id, made: d.made, hasPayed: d.paying } }).concat(this.props.payedDishes.map(d => {return { id: d.dish._id, made: d.made, hasPayed: d.hasPayed }}))\r\n              }\r\n            })}}>Pay</Button>\r\n\r\n            if (loading)\r\n              result =\r\n                <React.Fragment>\r\n                  <LinearProgress determinate={false}></LinearProgress>\r\n                  {result}\r\n                </React.Fragment>\r\n            if (error) console.error(error);\r\n\r\n            if (data) this.props.history.goBack()\r\n\r\n            return result\r\n          }}\r\n        </Mutation>\r\n        <Button theme=\"secondary\" onClick={() => this.saveFile(this.state.dishes.filter(d => d.paying).map(d => d.dish))}><ButtonIcon icon=\"cloud_download\" />Download</Button>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport PayOrderContent from \"../components/orders/PayOrderContent\"\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar';\r\n\r\nexport default class PayOrder extends Component{\r\n  render() {\r\n    const { id } = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Pay Order</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <ToolbarIcon icon=\"clear\" onClick={() => this.props.history.goBack()} />\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n\r\n        <Query\r\n          query={gql`\r\n                query order($id: ID) {\r\n                  orders(_id: $id) {\r\n                    _id,\r\n                    name,\r\n                    table,\r\n                    dishes {\r\n                      dish {\r\n                        _id,\r\n                        name,\r\n                        cost\r\n                      },\r\n                      hasPayed,\r\n                      made\r\n                    }\r\n                  }\r\n                }`} variables={{ id }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <p>Error :(</p>;\r\n            \r\n            if (data.orders.length !== 1) return String()\r\n            return <PayOrderContent history={this.props.history} id={id} payedDishes={data.orders[0].dishes.filter(d => d.hasPayed)} dishesToPay={data.orders[0].dishes.filter(d => !d.hasPayed).map(d => { return { dish: d.dish, made: d.made, paying: true } })} />\r\n\r\n          }}\r\n\r\n        </Query>\r\n      </Elevation>\r\n    )\r\n  }\r\n} ","import React, { Component } from 'react'\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Fab } from '@rmwc/fab';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog'\r\nimport { TextField } from '@rmwc/textfield';\r\nimport {\r\n  SimpleListItem\r\n} from '@rmwc/list'; \r\nimport { Select } from '@rmwc/select';\r\n\r\nconst ADD = gql` mutation add($name: String!, $cost: Float!, $type: ID!){\r\n addDish(name: $name, cost: $cost, type: $type){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst UPDATE = gql`mutation update($id: ID!, $name: String, $cost: Float, $type: ID){\r\n updateDish(_id: $id, name: $name, cost: $cost, type: $type){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst REMOVE = gql`mutation remove($id: ID!){\r\n removeDish(_id: $id, ){\r\n   _id, \r\n   name\r\n }\r\n}`\r\n\r\nexport default class DishDialog extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { name: '', cost: 0.00, type: '', standardDialogOpen: false }\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleCostChange = this.handleCostChange.bind(this)\r\n    this.handleTypeChange = this.handleTypeChange.bind(this)\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps) {\r\n    if (newProps._id && (newProps.name !== oldProps.name || newProps.cost !== oldProps.cost || newProps.type._id !== oldProps.type._id)) {\r\n      this.setState({ name: newProps.name, cost: newProps.cost.toFixed(2), type: newProps.type._id })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props._id)\r\n      this.setState({ name: this.props.name, cost: this.props.cost.toFixed(2), type: this.props.type._id })\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    this.setState({ name: e.target.value || '' })\r\n  }\r\n\r\n  handleCostChange(e) {\r\n    this.setState({ cost: e.target.value })\r\n  }\r\n\r\n  handleTypeChange(e) {\r\n    this.setState({ type: e.target.value })\r\n  }\r\n\r\n  toggleDialog() {\r\n    return () => {\r\n      this.setState({ name: this.props.name || \"\", cost: this.props.cost || 0, type: this.props.type ? this.props.type._id : '', standardDialogOpen: !this.state.standardDialogOpen })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={this.state.standardDialogOpen}\r\n        onClose={evt => this.setState({ standardDialogOpen: false })}\r\n      >\r\n          <DialogTitle>{this.props._id ? `Edit ${this.props.name}` : \"New dish\"}</DialogTitle>\r\n   \r\n          <DialogContent>\r\n            <TextField type=\"text\" label=\"Name\" value={this.state.name } onChange={this.handleNameChange} />\r\n            <TextField type=\"number\" inputMode=\"numeric\" label=\"Cost\" invalid={false} value={this.state.cost} onChange={this.handleCostChange} />\r\n            <Select\r\n              value={this.state.type}\r\n              onChange={this.handleTypeChange}\r\n              placeholder=\"\"\r\n              label=\"Dish type\"\r\n              options={this.props.dishTypes}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <DialogButton  theme=\"secondary\" action=\"cloase\" isDefaultAction>Cancel</DialogButton>\r\n            {\r\n              this.props._id ?\r\n                <Mutation mutation={REMOVE}>\r\n                  {(remove) =>\r\n                    <DialogButton action=\"accept\" onClick={() => remove({ variables: { id: this.props._id } }) }>Delete</DialogButton >\r\n                  }\r\n                </Mutation>\r\n                : String()\r\n            }\r\n            <Mutation mutation={this.props._id ? UPDATE : ADD}>\r\n              {(addOrUpdate) =>\r\n                <DialogButton action=\"accept\" onClick={() => {\r\n                  addOrUpdate({ variables: { id: this.props._id, name: this.state.name, type: this.state.type, cost: this.state.cost } })}}>Save</DialogButton>\r\n              }\r\n            </Mutation>\r\n          </DialogActions>\r\n      </Dialog>\r\n      {\r\n        this.props._id ?\r\n          <SimpleListItem key={this.props._id} onClick={this.toggleDialog()} text={this.props.name} secondaryText={`€ ${this.props.cost.toFixed(2)}`} meta=\"edit\" />:\r\n          <Fab className=\"floating-right\" icon=\"add\"  onClick={this.toggleDialog()} />\r\n      }\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Elevation } from '@rmwc/elevation'; \r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List\r\n} from '@rmwc/list';\r\nimport DishDialog from './DishDialog';\r\n\r\nexport default class DishCard extends Component {\r\n  render(){\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24} style={{margin: \"1rem\"}}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>{this.props.typeName}</ToolbarTitle>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        <List twoLine>\r\n          {this.props.dishes.map(d => \r\n            <DishDialog key={d._id} {...d} dishTypes={this.props.dishTypes}/>\r\n          )}\r\n        </List>\r\n      </Elevation>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Masonry from 'react-masonry-component';\r\n\r\nimport DishCard from '../components/dishes/DishCard'\r\nimport DishDialog from '../components/dishes/DishDialog'\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nclass Dishes extends Component {\r\n  groupBy(xs, func) {\r\n    return xs.reduce(function (rv, x) {\r\n      (rv[func(x)] = rv[func(x)] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  }\r\n\r\n  render() {\r\n    const filter = this.props.store.searchText\r\n    const matchesFilter = new RegExp(filter, \"i\")\r\n    return (\r\n      <Query\r\n        query={gql`query dishTypes {\r\n              dishTypes {\r\n                _id,\r\n                name\r\n                }\r\n              }`}\r\n        pollInterval={1000}>\r\n        {({ data }) => {\r\n          let dishTypes = []\r\n          if (data && data.dishTypes)\r\n            dishTypes = data.dishTypes.map(d => {return {label: d.name, value: d._id}})\r\n          return (\r\n            <React.Fragment>\r\n              <Query\r\n                query={gql`query dishes {\r\n              dishes {\r\n                _id,\r\n                name,\r\n                cost,\r\n                type {\r\n                  _id,\r\n                  name\r\n                }\r\n              }\r\n            }`}\r\n                pollInterval={1000}>\r\n                {({ loading, error, data }) => {\r\n                  if (!data || !data.dishes)\r\n                    data = { dishes: [] }\r\n\r\n                  const grouped = this.groupBy(data.dishes.filter(o => {\r\n                    return (!filter || matchesFilter.test(o.name) || matchesFilter.test(o.type.name))\r\n                  }), d => d.type.name)\r\n\r\n                  const groupedDishes = []\r\n                  for (const group in grouped) {\r\n                    groupedDishes.push(<div\r\n                      key={grouped[group][0]._id}\r\n                      style={{\r\n                        width: '-webkit-fill-available',\r\n                        maxWidth: '500px',\r\n                        minWidth: '320px'\r\n                      }}>\r\n                      <DishCard typeName={group} dishes={grouped[group]} dishTypes={dishTypes} />\r\n                    </div>)\r\n                  }\r\n\r\n                  let result = <Masonry id=\"masonry-layout\">\r\n                    {groupedDishes}\r\n                  </Masonry>\r\n\r\n                  if (loading) result =\r\n                    <React.Fragment>\r\n                      <LinearProgress determinate={false}></LinearProgress>\r\n                      {result}\r\n                    </React.Fragment>\r\n                  if (error) return <p>Error :(</p>;\r\n\r\n                  return result\r\n\r\n                }}\r\n              </Query>\r\n              <DishDialog dishTypes={dishTypes} />\r\n              <div className=\"bottomSpacer\" />\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Dishes))","import React, { Component } from 'react'\r\nimport { observer, inject } from \"mobx-react\"\r\nimport {\r\n  List,\r\n  ListItem, \r\n  ListItemGraphic,\r\n  ListItemText\r\n} from '@rmwc/list';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\n\r\nclass GlobalSettings extends Component {\r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Global Settings</ToolbarTitle>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        \r\n        <List>\r\n          <ListItem onClick={() => this.props.store.setKitchenMode(!this.props.store.kitchenMode)}>\r\n            <ListItemGraphic icon={this.props.store.kitchenMode ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n            <ListItemText>Kitchen Mode</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(GlobalSettings))","import React, { Component } from 'react'\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {  ToolbarIcon } from 'rmwc/Toolbar';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog';\r\nimport { TextField } from 'rmwc/TextField';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemMeta } from 'rmwc/List';\r\n\r\nconst ADD = gql` mutation add($name: String!){\r\n addDishType(name: $name){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst UPDATE = gql`mutation update($id: ID!, $name: String!){\r\n updateDishType(_id: $id, name: $name){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst REMOVE = gql`mutation remove($id: ID!){\r\n removeDishType(_id: $id, ){\r\n   _id, \r\n   name\r\n }\r\n}`\r\n\r\nexport default class DishTypeDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {name: \"\"}\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n  }\r\n  \r\n\r\n  componentWillReceiveProps(newProps, oldProps){\r\n    if (newProps.name && newProps.name !== oldProps.name ){\r\n      this.setState({ name: newProps.name })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.name)\r\n      this.setState({ name: this.props.name })\r\n  }\r\n\r\n  toggleDialog(){\r\n    return () => {\r\n      this.setState({name: this.props.name, standardDialogOpen: !this.state.standardDialogOpen})\r\n    }\r\n  }\r\n\r\n  handleNameChange(e){\r\n    this.setState({name: e.target.value || ''})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <Dialog\r\n          open={this.state.standardDialogOpen}\r\n          onClose={evt => this.setState({ standardDialogOpen: false })}\r\n        >\r\n          <DialogTitle>{this.props._id ? \"Edit dish type\" : \"New dish type\"}</DialogTitle>\r\n            <DialogContent>\r\n              <TextField type=\"text\" label=\"Name\" value={this.state.name || ''} onChange={this.handleNameChange} />\r\n            </DialogContent>\r\n            <DialogActions >\r\n              <DialogButton  theme=\"secondary\" action=\"cancel\" isDefaultAction >Cancel</DialogButton>\r\n              {\r\n                this.props._id ?\r\n                  <Mutation mutation={REMOVE}>\r\n                    {(remove) =>\r\n                      <DialogButton action=\"accept\" onClick={() => remove({ variables: { id: this.props._id } })}>Delete</DialogButton>\r\n                    }\r\n                  </Mutation>\r\n                : String()\r\n              }\r\n              <Mutation mutation={this.props._id ? UPDATE : ADD}>\r\n                {(addOrUpdate) =>\r\n                  <DialogButton action=\"accept\" onClick={() => addOrUpdate({variables: { id: this.props._id, name: this.state.name}})}>Save</DialogButton>\r\n                }\r\n              </Mutation>\r\n            </DialogActions>\r\n        </Dialog>\r\n        {\r\n          this.props._id ?\r\n            <ListItem onClick={this.toggleDialog()}>\r\n              <ListItemText>{this.props.name}</ListItemText>\r\n              <ListItemMeta icon=\"edit\" />\r\n            </ListItem> :\r\n            <ToolbarIcon icon=\"add\" onClick={this.toggleDialog()} />\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List\r\n} from '@rmwc/list';\r\nimport DishTypeDialog from './DishTypeDialog';\r\n\r\nexport default class DishTypes extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Dish types</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <DishTypeDialog />\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        <Query\r\n          query={gql`query dishTypes {\r\n              dishTypes {\r\n                _id,\r\n                name\r\n                }\r\n              }`}\r\n          variables={{ hasPayed: false }}\r\n          pollInterval={1000}>\r\n          {({ loading, error, data }) => {\r\n            if (!data || !data.dishTypes)\r\n              data = {dishTypes: []}\r\n\r\n            let result = <List>{\r\n                data.dishTypes.map(d => \r\n                  <DishTypeDialog key={d._id} {...d}/>\r\n                )}\r\n              </List>\r\n\r\n            if (loading) result =\r\n              <React.Fragment>\r\n                <LinearProgress determinate={false}></LinearProgress>\r\n                {result}\r\n              </React.Fragment>\r\n            if (error) return <p>Error :(</p>;\r\n            return(result)\r\n            }\r\n          }\r\n          </Query>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\n\r\nimport GlobalSettings from '../components/settings/GlobalSettings'\r\nimport DishTypes from '../components/settings/DishTypes'\r\n\r\nexport default class Settings extends Component {\r\n  render(){\r\n    return(\r\n      <Grid>\r\n        <GridCell span=\"12\">\r\n          <Elevation className=\"main-elevation\" z={24}>\r\n            <GlobalSettings />\r\n\r\n          </Elevation>\r\n        </GridCell>\r\n        <GridCell span=\"12\">\r\n          <Elevation className=\"main-elevation\" z={24}>\r\n            <DishTypes />\r\n          </Elevation>\r\n        </GridCell>\r\n      </Grid>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar'; \r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryText,\r\n  ListItemMeta\r\n} from '@rmwc/list';\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { Menu, MenuItem, MenuSurfaceAnchor } from '@rmwc/menu';\r\nimport FileSaver from \"filesaver.js-npm\"\r\n\r\nexport default class History extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.setHistoryFilter = this.setHistoryFilter.bind(this)\r\n    this.getMonday = this.getMonday.bind(this)\r\n  }\r\n\r\n  state={\r\n    menuIsOpen: false,\r\n    minOrderTimestamp: new Date(\"0\"),\r\n    header: \"History\"\r\n  }\r\n\r\n  getMonday(d) {\r\n    d = new Date(d);\r\n    var day = d.getDay(),\r\n      diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\r\n    return new Date(d.setDate(diff));\r\n  }\r\n\r\n  downloadData(data){\r\n    const blob = new Blob(\r\n      data.map(o => `${o.timestamp.toISOString()},${o.name},${o.type},${o.cost}\\n`), { type: \"text/plain;charset=utf-8\" })\r\n    FileSaver.saveAs(blob, `Orders.csv`, true)\r\n  }\r\n\r\n  setHistoryFilter(evt){\r\n      let tmsp = new Date(\"0\");\r\n      let title = \"History\"\r\n\r\n      if (evt.detail.index === 1){\r\n        tmsp = this.getMonday(new Date(new Date().toDateString()))\r\n        title = \"This weeks History\"\r\n      } else if (evt.detail.index === 2) {\r\n        tmsp = new Date(new Date().toDateString())\r\n        title = \"Todays History\"\r\n      }\r\n\r\n      this.setState({\r\n        minOrderTimestamp: tmsp,\r\n        header: title\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Query\r\n          query={gql`\r\n            {\r\n              orders(hasPayed: true) {\r\n                timestamp\r\n                dishes {\r\n                  dish {\r\n                    name,\r\n                    cost,\r\n                    type{\r\n                      name\r\n                    } \r\n                  }\r\n                }\r\n              }\r\n            }`}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <LinearProgress determinate={false}></LinearProgress>;\r\n            if (error) return <p>Error :(</p>;\r\n\r\n            if (id) {\r\n              return this.fetchData(id, data.dishes)\r\n            }\r\n\r\n            var ordered = []\r\n            if (data && data.orders)\r\n              data.orders.forEach(o => {\r\n                o.dishes.forEach(d => {\r\n                  const timestamp = new Date(o.timestamp)\r\n                  if (timestamp >= this.state.minOrderTimestamp)\r\n                    ordered.push({\r\n                      timestamp: timestamp,\r\n                      name: d.dish.name,\r\n                      cost: d.dish.cost.toFixed(2),\r\n                      type: d.dish.type.name\r\n                    })\r\n                })\r\n              })\r\n\r\n            return (\r\n              <React.Fragment>\r\n                <Toolbar>\r\n                  <ToolbarRow>\r\n                    <ToolbarSection alignStart>\r\n                      <ToolbarTitle>{ this.state.header }</ToolbarTitle>\r\n                    </ToolbarSection>\r\n                    <ToolbarSection alignEnd>\r\n                      <MenuSurfaceAnchor>\r\n                        <Menu\r\n                          open={this.state.menuIsOpen}\r\n                          onSelect={this.setHistoryFilter}\r\n                          onClose={_ => this.setState({menuIsOpen: false})}\r\n                        >\r\n                          <MenuItem>Everything</MenuItem>\r\n                          <MenuItem>This Week</MenuItem>\r\n                          <MenuItem>Today</MenuItem>\r\n                        </Menu>\r\n\r\n                        < ToolbarIcon icon = \"filter_list\"\r\n                          onClick={evt => this.setState({'menuIsOpen': !this.state.menuIsOpen})}\r\n                        />\r\n                        </MenuSurfaceAnchor>\r\n                        <ToolbarIcon icon=\"cloud_download\" onClick={() => this.downloadData(ordered)} />\r\n                    </ToolbarSection>\r\n                  </ToolbarRow>\r\n                </Toolbar>\r\n                <List>{\r\n                  ordered.map((o, i) => \r\n                    <ListItem key={i} >\r\n                      <ListItemText>{o.name}\r\n                        <ListItemSecondaryText> {o.timestamp.toDateString()} </ListItemSecondaryText>\r\n                      </ListItemText>\r\n                      <ListItemMeta tag=\"span\" basename=\"\" >{`€ ${o.cost}`}</ListItemMeta>\r\n                    </ListItem>\r\n                  )}\r\n                </List>\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Query>\r\n      </Elevation>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css';\n\nimport Nav from './components/navigation/Nav'\nimport Orders from './pages/Orders'\nimport OrderDetails from './pages/OrderDetails'\nimport PayOrder from './pages/PayOrder'\nimport Dishes from './pages/Dishes'\nimport Settings from './pages/Settings'\nimport Hist from './pages/History'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n\n        \n        <div className=\"mdc-top-app-bar--fixed-adjust\">\n          <Route exact path=\"/\" component={ Orders } />\n          <Route path=\"/orders\" component={ Orders } />\n          <Route path=\"/orderDetails/:id?\" component={OrderDetails} />\n          <Route path=\"/payOrder/:id\" component={PayOrder} />\n          <Route path=\"/dishes\" component={Dishes} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/orderHistory\" component={Hist} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  observable,\r\n  decorate\r\n} from \"mobx\"\r\n\r\nclass Store {\r\n  searchText = \"\"\r\n  kitchenMode = localStorage.getItem(\"Bit.KitchenMode\") === \"true\" || false\r\n \r\n  setKitchenMode(isOn) {\r\n    this.kitchenMode = isOn;\r\n    localStorage.setItem(\"Bit.KitchenMode\", isOn);\r\n  }\r\n}\r\n\r\ndecorate(Store, {\r\n  searchText: observable,\r\n  kitchenMode: observable\r\n})\r\nlocalStorage.getItem(\"Bit.KitchenMode\")\r\nlet DefaultStore = new Store()\r\n\r\nexport default DefaultStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Provider } from \"mobx-react\"\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Store from \"./stores/Store\"\nimport { ThemeProvider } from '@rmwc/theme';\n\nconst client = new ApolloClient();\n\nconst stores = {\n  store: Store\n}\n\nReactDOM.render(  \n  <ThemeProvider options = {\n    {\n      primary: '#795548',\n      secondary: '#486c79',\n      background: '#fff'\n    }\n  } >\n    <ApolloProvider client={client}>\n      <Provider {...stores}>\n      <Router>\n        <App />\n      </Router>\n      </Provider>\n    </ApolloProvider>\n  </ThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}