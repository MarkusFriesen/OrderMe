{"version":3,"sources":["components/navigation/Nav.js","components/orders/JoinDialogSurface.js","components/orders/JoinDialog.js","components/orders/OrderCard.js","pages/Orders.js","components/order-details/DetailExtraDialog.js","components/order-details/DetailContent.js","pages/OrderDetails.js","components/orders/CreateReciept.js","components/orders/PayOrderContent.js","pages/PayOrder.js","components/dishes/DishDialog.js","components/dishes/DishCard.js","pages/Dishes.js","components/settings/GlobalSettings.js","components/settings/DishTypeDialog.js","components/settings/DishTypes.js","pages/Settings.js","pages/History.js","components/extras/ExtraDialog.js","components/extras/ExtraCard.js","pages/DishExtra.js","App.js","serviceWorker.js","stores/Store.js","index.js"],"names":["Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searching","searchText","modalOpen","toggleSearch","bind","assertThisInitialized","handleSearchText","onClick","setState","_this2","e","target","value","store","_this3","react_default","a","createElement","next","dense","fixed","className","alignStart","placeholder","autoFocus","onChange","aria-label","icon","alt","Fragment","kitchenMode","alignEnd","drawer_next","modal","open","onClose","list","Link","to","list_item","Component","inject","observer","JOIN","gql","_templateObject","JoinOrderSurface","people","handleJoin","joinOrders","newProps","oldProps","JSON","stringify","data","map","o","i","id","_id","name","selected","length","join","_this4","ordersToJoin","filter","s","variables","ids","_this5","dialog_next","table","p","key","action","react_apollo_browser_umd","mutation","isDefaultAction","JoinOrder","standardDialogOpen","query","JoinDialog_templateObject","pollInterval","_ref","loading","error","orders","evt","JoinDialogSurface_JoinOrderSurface","assign","title","concat","body","card_next","MADE","OrderCard_templateObject","OrderCard","handleDishClick","made","dishes","d","dish","hasPayed","delivered","extras","style","padding","typography_next","use","tag","theme","v","disabledKitchen","disabledServer","graphic","disabled","text","secondaryText","ripple","notes","JoinDialog_JoinOrder","Order","matchesFilter","RegExp","Orders_templateObject","result","lib_default","toString","test","some","type","order","width","maxWidth","minWidth","orders_OrderCard","linear_progress_next","console","warn","fab_next","DetailExtraDialog","onDelete","selectedExtras","onCancel","onSave","create","addExtra","_this$props","chip_next","sort","b","label","splice","AddOrder","DetailContent_templateObject","UpdateOrder","_templateObject2","DetailContent","activeTabIndex","dishTypes","selectedChip","addDish","removeDish","changeTextField","selectDish","saveExtras","typeName","forEach","push","selectedDishId","field","openDialog","selectedDish","selectableExtras","dishExtras","keys","grid_next","span","String","tab_bar","onActivate","detail","index","tab","choice","_","checkmark","activated","textfield_next","min","inputMode","pattern","textarea","fullwidth","addOrUpdate","button_next","history","goBack","DetailExtraDialog_DetailExtraDialog","OrderDetails","OrderDetails_templateObject","DetailContent_DetailContent","match","params","elevation_next","z","toolbar_next","OrderDetails_templateObject2","_ref2","graphQLErrors","_ref3","message","fetchData","CreateReceipt","totalCosts","reduce","c","f","cost","toFixed","CreateReciept_templateObject","_data$company","company","street","postalCode","city","website","taxId","dateTime","Date","toLocaleString","split","align","idx","PAY","PayOrderContent_templateObject","PayOrderContent","paying","selectAll","changePayment","toggleSelection","toggleAll","every","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","return","isNaN","dishesToPay","_this$state","total","extraCost","basename","invalid","pay","payedDishes","amountPayed","updateOrder","window","print","prop","m","objectSpread","PayOrder","PayOrder_templateObject","PayOrderContent_PayOrderContent","ADD","DishDialog_templateObject","UPDATE","DishDialog_templateObject2","REMOVE","_templateObject3","DishDialog","handleNameChange","handleCostChange","handleTypeChange","select_next","options","remove","DishCard","device","margin","twoLine","metaIcon","DishDialog_DishDialog","Dishes","xs","func","rv","x","Dishes_templateObject","Dishes_templateObject2","grouped","groupBy","groupedDishes","group","DishCard_DishCard","GlobalSettings","setKitchenMode","DishTypeDialog_templateObject","DishTypeDialog_templateObject2","DishTypeDialog_templateObject3","DishTypeDialog","toggleDialog","DishTypes","DishTypeDialog_DishTypeDialog","DishTypes_templateObject","Settings","settings_GlobalSettings","DishTypes_DishTypes","History","menuIsOpen","minOrderTimestamp","toDateString","header","setHistoryFilter","getMonday","day","getDay","diff","getDate","setDate","blob","Blob","toConsumableArray","timestamp","toISOString","encoding","FileSaver","saveAs","orderBlob","tmsp","History_templateObject","ordered","totalWithTips","ordersInRange","menu_surface","menu","onSelect","downloadData","ExtraDialog_templateObject","ExtraDialog_templateObject2","ExtraDialog_templateObject3","ExtraDialog","extra","ExtraDialog_ExtraDialog","DishExtra","DishExtra_templateObject","DishExtra_templateObject2","groupedExtras","ExtraCard_DishCard","App","components_navigation_Nav","Route","exact","path","component","Orders","Hist","Extras","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","Store","localStorage","getItem","isOn","setItem","decorate","observable","DefaultStore","client","ApolloClient","stores","ReactDOM","render","theme_next","primary","secondary","background","index_module","HashRouter","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33db7672.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport {\r\n  TopAppBar,\r\n  TopAppBarRow,\r\n  TopAppBarSection,\r\n  TopAppBarActionItem,\r\n  TopAppBarTitle,\r\n  TopAppBarNavigationIcon\r\n} from '@rmwc/top-app-bar'\r\nimport {\r\n  List,\r\n  ListItemGraphic,\r\n  ListItem,\r\n  ListItemText\r\n} from '@rmwc/list';\r\nimport {\r\n  Drawer,\r\n  DrawerHeader,\r\n  DrawerContent,\r\n  DrawerTitle\r\n} from '@rmwc/drawer';\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nimport './Nav.css'\r\n\r\nclass Nav extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      searching: false,\r\n      searchText: \"\",\r\n      modalOpen: false\r\n    }\r\n\r\n    this.toggleSearch = this.toggleSearch.bind(this)\r\n    this.handleSearchText = this.handleSearchText.bind(this)\r\n    this.onClick = this.onClick.bind(this)\r\n  }\r\n\r\n  \r\n  onClick(){\r\n    this.setState({ modalOpen: !this.state.modalOpen })\r\n  }\r\n  handleSearchText(){\r\n    return (e)=>{\r\n      this.setState({\r\n        searchText: e.target.value\r\n      })\r\n      this.props.store.searchText = e.target.value\r\n    }\r\n  }\r\n\r\n  toggleSearch(){\r\n    this.setState({ searching: !this.state.searching, searchText: \"\" })\r\n    this.props.store.searchText = \"\"\r\n  }\r\n\r\n  render(){\r\n    const { toggleSearch, onClick } = this \r\n    if (this.state.searching)\r\n      return (\r\n        <TopAppBar dense fixed>\r\n          <TopAppBarRow>\r\n            <TopAppBarSection className=\"search-field\" alignStart>\r\n              <input placeholder=\"Search\" autoFocus value={this.state.searchText} onChange={this.handleSearchText()}/>\r\n              <TopAppBarActionItem aria-label=\"Search\" icon=\"clear\" alt=\"Search this Page\" onClick={toggleSearch}/>\r\n            </TopAppBarSection>          \r\n          </TopAppBarRow>\r\n       </TopAppBar>\r\n      )\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <TopAppBar dense fixed className=\"no-print\">\r\n          <TopAppBarRow>\r\n            <TopAppBarSection alignStart>\r\n              <TopAppBarNavigationIcon icon=\"menu\" onClick={onClick}/>\r\n              <TopAppBarTitle>{this.props.store.kitchenMode ? \"BIt's Kitchen\" : \"BIt\"}</TopAppBarTitle>\r\n            </TopAppBarSection>\r\n            <TopAppBarSection alignEnd>\r\n              <TopAppBarActionItem aria-label=\"Search\" icon=\"search\" alt=\"Search this Page\" onClick={toggleSearch}/>\r\n            </TopAppBarSection>\r\n          </TopAppBarRow>\r\n        </TopAppBar>\r\n\r\n        <Drawer\r\n            modal\r\n            open={this.state.modalOpen}\r\n            onClose={() => this.setState({ modalOpen: false })}\r\n          >\r\n            <DrawerHeader>\r\n              <DrawerTitle>Menu</DrawerTitle>\r\n            </DrawerHeader>\r\n            <DrawerContent>\r\n              <List>\r\n                <Link to=\"/orders\">\r\n                  <ListItem onClick={onClick}>\r\n                    <ListItemGraphic icon=\"shopping_cart\" />\r\n                    <ListItemText>Orders</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to=\"/orderHistory\">\r\n                <ListItem onClick={onClick}>\r\n                  <ListItemGraphic icon=\"history\"/>\r\n                  <ListItemText>History</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to=\"/dishes\">\r\n                <ListItem onClick={onClick}>\r\n                  <ListItemGraphic icon = \"shopping_basket\" />\r\n                  <ListItemText>Dishes</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to=\"/dishExtra\">\r\n                <ListItem onClick={onClick}>\r\n                  <ListItemGraphic icon = \"loyalty\" />\r\n                  <ListItemText>Extras</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to=\"/settings\">\r\n                <ListItem onClick={onClick}>\r\n                  <ListItemGraphic icon=\"settings\" />  \r\n                  <ListItemText>Settings</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n              </List>\r\n            </DrawerContent>\r\n          </Drawer>\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Nav))","import React, { Component } from 'react'\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic,\r\n} from '@rmwc/list';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nconst JOIN = gql`\r\n  mutation join($id: ID!, $ids: [ID]!){\r\n    joinOrders(_id: $id, orderIds: $ids){\r\n      _id,\r\n      name,\r\n      table,\r\n      dishes {\r\n        dish {\r\n          _id,\r\n          name,\r\n          cost\r\n        },\r\n        made,\r\n        hasPayed,\r\n        extras {\r\n          _id,\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`\r\n\r\nexport default class JoinOrderSurface extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.handleJoin = this.handleJoin.bind(this)\r\n    this.joinOrders = this.joinOrders.bind(this)\r\n  }\r\n  \r\n  state = {\r\n    people: []\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps){\r\n    if (JSON.stringify(newProps) !== JSON.stringify(oldProps))\r\n      this.setState({\r\n        people: newProps.data.map((o, i) => { return { id: o._id, name: o.name, selected: (this.state.people.length > i ? this.state.people[i].selected : false) } })\r\n      })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      people: this.props.data.map(o => {return {id: o._id, name: o.name, selected: false}})\r\n    })\r\n  }\r\n\r\n  handleJoin(i){\r\n    return () => {\r\n      const selected = this.state.people\r\n      selected[i].selected = !selected[i].selected\r\n      this.setState({\r\n        people: selected\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n  joinOrders(join){\r\n    return () => {\r\n      const ordersToJoin = this.state.people.filter(s => s.selected).map(s => s.id)\r\n      join({variables: {id: this.props._id, ids: ordersToJoin}})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <DialogTitle>Everyone at table {this.props.table}</DialogTitle>\r\n        < DialogContent >\r\n          <List>\r\n          {\r\n            this.state.people.map((p, i) => \r\n                <ListItem key={p.id} onClick={this.handleJoin(i)}>\r\n                <ListItemGraphic icon={p.selected ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n                <ListItemText>{ p.name }</ListItemText>\r\n              </ListItem>\r\n            )\r\n          }\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <DialogButton action=\"close\">Cancel</DialogButton >\r\n          <Mutation mutation={JOIN}>\r\n            {(join) => \r\n              <DialogButton action=\"accept\" onClick={this.joinOrders(join)} isDefaultAction>Join</DialogButton >\r\n            }\r\n            </Mutation>\r\n        </DialogActions>\r\n      </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {\r\n  Dialog,\r\n  SimpleDialog\r\n} from '@rmwc/dialog';\r\nimport {\r\n  CardActionButton\r\n} from '@rmwc/card';\r\n\r\nimport JoinDialogSurface from \"./JoinDialogSurface\"\r\n\r\nexport default class JoinOrder extends Component {\r\n  state = {\r\n    standardDialogOpen: false\r\n  }\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n        <Query\r\n          query={gql`\r\n                query order($table: Int) {\r\n                  orders(table: $table, hasPayed: false) {\r\n                    _id,\r\n                    name,\r\n                  }\r\n                }`} variables={{ table: this.props.table }} pollInterval={5000}>\r\n          {({ loading, error, data }) => {\r\n            if (!loading && !error && data && data.orders)\r\n              return(\r\n              <Dialog\r\n                open={this.state.standardDialogOpen}\r\n                onClose={evt => this.setState({ standardDialogOpen: false })}\r\n              >\r\n                  <JoinDialogSurface data={data.orders.filter(o => o._id !== this.props._id)} {...this.props}/>\r\n              </Dialog>)\r\n            return (\r\n              <SimpleDialog\r\n                title={`Everyone at table ${this.props.table}`}\r\n                body=\"Fetching Data\"\r\n                open={this.state.standardDialogOpen}\r\n                onClose={evt => this.setState({ standardDialogOpen: false })}\r\n              />\r\n            )\r\n\r\n          }}\r\n        </Query>\r\n      <CardActionButton\r\n          onClick={evt => this.setState({ standardDialogOpen: true })}\r\n        >\r\n          Join\r\n      </CardActionButton>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardPrimaryAction,\r\n  CardActionIcon,\r\n  CardActions,\r\n  CardActionButtons,\r\n  CardActionIcons\r\n} from '@rmwc/card';\r\nimport {\r\n  List,\r\n  SimpleListItem\r\n} from '@rmwc/list';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nimport { Typography } from '@rmwc/typography';\r\n\r\nimport JoinOrder from './JoinDialog';\r\n\r\nimport './card.css';\r\n\r\nconst MADE = gql`\r\n  mutation updateOrder($id: ID!, $dishes: [orderDishMutation]!){\r\n    updateOrder(_id: $id, dishes: $dishes){\r\n      _id,\r\n      name,\r\n      table,\r\n      notes,\r\n      dishes {\r\n        dish {\r\n          _id,\r\n          name,\r\n          cost\r\n        },\r\n        made,\r\n        delivered,\r\n        hasPayed\r\n      }\r\n    }\r\n  }`\r\n\r\nclass OrderCard extends Component {\r\n  constructor(){\r\n    super()\r\n    this.handleDishClick = this.handleDishClick.bind(this)\r\n  }\r\n\r\n  handleDishClick(id, i, made){\r\n    return () => {\r\n      const dishes = this.props.dishes.map(d => {return {id: d.dish._id, made: d.made, hasPayed: d.hasPayed, delivered: d.delivered, extras: d.extras.map(e => e._id)}})\r\n\r\n      if (this.props.store.kitchenMode){\r\n        if (dishes[i].delivered) return;\r\n        dishes[i].made = !dishes[i].made;\r\n      } else {\r\n        if (!dishes[i].made) return;\r\n        dishes[i].delivered = !dishes[i].delivered;\r\n      }\r\n\r\n      made({variables: {\r\n        id: id, \r\n        dishes: dishes\r\n      }})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const props = this.props\r\n    return (\r\n      <Card>\r\n        <Link to={`/orderDetails/${props._id}`}>\r\n          <CardPrimaryAction>\r\n            <div style={{ padding: '0 1rem 1rem 1rem' }}>\r\n              <Typography use=\"headline6\" tag=\"h2\" style={{}}>\r\n                <span className=\"highlight\">{props.table}</span> {props.name}\r\n              </Typography>\r\n            </div>\r\n          </CardPrimaryAction>\r\n        </Link>\r\n        <div style={{ padding: '0 1rem 1rem 1rem' }}>\r\n          <Mutation mutation={MADE}>\r\n            {(made) => \r\n                <Typography use=\"body1\" tag=\"div\" theme=\"textSecondaryOnBackground\">\r\n                <List className=\"extendSecondaryText\">\r\n                  {props.dishes.map((v, i) =>{\r\n                    const disabledKitchen = this.props.store.kitchenMode && v.delivered;\r\n                    const disabledServer = !this.props.store.kitchenMode && !v.made;\r\n                    return (\r\n                    <SimpleListItem key={i} className={v.delivered ? \"done\" : \"\"} \r\n                      graphic = {\r\n                        v.made ? (v.delivered ? \"done_all\" : \"done\") : \"radio_button_unchecked\"\r\n                      }\r\n                      onClick={this.handleDishClick(props._id, i, made)} \r\n                      disabled = {disabledKitchen || disabledServer}\r\n                      text={v.dish.name}\r\n                      secondaryText={v.extras.map(e => e.name).join(\", \")}\r\n                      ripple={v.made} />)}\r\n                    )}\r\n                </List>\r\n              </Typography>\r\n            }\r\n          </Mutation>\r\n        </div>\r\n        <Typography\r\n          use=\"subtitle1\"\r\n          tag=\"div\"\r\n          style={{ padding: '0.5rem 1rem' }}\r\n          theme=\"textSecondaryOnBackground\"\r\n        >\r\n          {this.props.notes}\r\n        </Typography>\r\n        <CardActions>\r\n          <CardActionButtons>\r\n            <JoinOrder {...this.props}/>\r\n          </CardActionButtons>\r\n          <CardActionIcons>\r\n            <Link to={`/payOrder/${props._id}`}>\r\n              <CardActionIcon icon = \"credit_card\" />\r\n            </Link>\r\n          </CardActionIcons>\r\n        </CardActions>\r\n      </Card>)\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(OrderCard))\r\n","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Fab } from '@rmwc/fab';\r\nimport Masonry from 'react-masonry-component';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport OrderCard from '../components/orders/OrderCard'\r\nimport { observer, inject } from \"mobx-react\"\r\nimport { LinearProgress } from '@rmwc/linear-progress'\r\n\r\nclass Order extends Component {\r\n  render() {\r\n    const filter = this.props.store.searchText\r\n    const matchesFilter = new RegExp(filter, \"i\")\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Query\r\n          query={gql`query order($hasPayed: Boolean) {\r\n              orders(hasPayed: $hasPayed) {\r\n                _id,\r\n                name,\r\n                table,\r\n                notes,\r\n                dishes {\r\n                  dish {\r\n                    _id,\r\n                    name,\r\n                    cost,\r\n                    type {\r\n                      _id,\r\n                      name\r\n                    }\r\n                  },\r\n                  made,\r\n                  delivered,\r\n                  hasPayed,\r\n                  extras {\r\n                    _id, \r\n                    name\r\n                  }\r\n                }\r\n              }\r\n            }`}\r\n          variables={{ hasPayed: false }}\r\n          pollInterval={500}>\r\n          {({ loading, error, data }) => {\r\n            if (!data || !data.orders)\r\n              data = {orders: []}\r\n            let result = <Masonry id=\"masonry-layout\">\r\n              {\r\n                data.orders.filter(o => {\r\n                  return (!filter || (o.table.toString() === filter) || matchesFilter.test(o.name) || o.dishes.some(d => matchesFilter.test(d.dish.type.name))) &&\r\n                    (!this.props.store.kitchenMode || o.dishes.some(d => !d.made))\r\n                }).map((order, i) => {\r\n\r\n                  return (<div\r\n                    key={i}\r\n                    style={{\r\n                      width: '-webkit-fill-available',\r\n                      maxWidth: '500px',\r\n                      minWidth: '320px'\r\n                    }}>\r\n                    <OrderCard key={order._id} {...order} {...this.props} />\r\n                    \r\n                  </div>)\r\n                })\r\n              }\r\n            </Masonry>\r\n\r\n            if (loading) result = \r\n              <React.Fragment>\r\n                <LinearProgress />\r\n                {result}\r\n              </React.Fragment>\r\n            if (error){\r\n              console.warn(error)\r\n              return <p>Error :(</p>;\r\n            } \r\n\r\n            return result\r\n            \r\n          }}\r\n        </Query>\r\n\r\n        <Link to=\"/orderDetails\">\r\n          <Fab className=\"floating-right\" icon=\"add\" />\r\n        </Link>\r\n        <div className=\"bottomSpacer\"/>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Order))","import React, { Component } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog'\r\nimport { List, SimpleListItem } from '@rmwc/list'\r\nimport { Chip, ChipSet } from '@rmwc/chip';\r\n\r\nexport default class DetailExtraDialog extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { selectedExtras: [] }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps) {\r\n    if (JSON.stringify(newProps.selectedExtras) !== JSON.stringify(oldProps.selectedExtras)) {\r\n      this.setState({\r\n        selectedExtras: newProps.selectedExtras\r\n      })\r\n    }\r\n  }\r\n  \r\n  onDelete = () => {\r\n    this.setState({ selectedExtras: []})\r\n    this.props.onDelete()\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.setState({ selectedExtras: []})\r\n    this.props.onClose()\r\n  }\r\n\r\n  onSave = () => {\r\n    this.props.onSave(this.state.selectedExtras.map(e => Object.create(e)))\r\n    this.setState({ selectedExtras: []})\r\n  }\r\n\r\n  addExtra = (e) => {\r\n    const { selectedExtras } = this.state\r\n    this.setState({selectedExtras: [e].concat(selectedExtras)})\r\n  }\r\n  render() {\r\n    const {dish, extras} = this.props;\r\n    let title = extras ? `Edit ${dish? dish.name : \"dish\"} extras` : `Confirm ${dish? dish.name : \"dish\"} Deletion`;\r\n\r\n    return(\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.onClose}\r\n      >\r\n        <DialogTitle>{title}</DialogTitle>\r\n\r\n        { extras ? \r\n          < DialogContent >\r\n            <ChipSet>\r\n              {extras.sort((a, b) => a.name < b.name ? -1 : 1)\r\n                .map(e => <Chip key={e._id} label={e.name} onClick={() => this.addExtra(e)}/>)}\r\n            </ChipSet>\r\n\r\n            <List>\r\n              {this.state.selectedExtras.map((s, id)=> \r\n              <SimpleListItem\r\n                key={id}\r\n                graphic=\"close\"\r\n                text={s.name}\r\n                onClick={() => {\r\n                  this.state.selectedExtras.splice(id, 1) \r\n                  this.setState({\r\n                    selectedExtras: this.state.selectedExtras\r\n                  })\r\n                  }}\r\n              />)}\r\n            </List>\r\n          </DialogContent> : \r\n          <React.Fragment/>}\r\n        <DialogActions>\r\n          <DialogButton \r\n            theme=\"secondary\" \r\n            action=\"close\" \r\n            onClick={this.onDelete}>Delete</DialogButton>\r\n          <DialogButton\r\n            theme=\"primary\"\r\n            action=\"close\"\r\n            isDefaultAction\r\n            onClick={this.onCancel}>Cancel</DialogButton>\r\n          {\r\n            extras ? < DialogButton\r\n            theme=\"primary\" \r\n            action=\"accept\"\r\n            onClick = {this.onSave} >Save</DialogButton> : <React.Fragment/> }\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\nimport { TabBar, Tab } from '@rmwc/tabs';\r\nimport { Chip, ChipSet } from '@rmwc/chip';\r\nimport {\r\n  List,\r\n  SimpleListItem\r\n} from '@rmwc/list';\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Button } from '@rmwc/button';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\n\r\nimport DetailExtraDialog from './DetailExtraDialog';\r\n\r\nimport './Details.css'\r\n\r\nconst AddOrder = gql`\r\n  mutation addOrder($name: String, $table: Int!, $notes: String, $dishes: [orderDishMutation]!){\r\n    addOrder(table: $table, name: $name, dishes: $dishes, notes: $notes){\r\n      _id, \r\n      name,\r\n      table,\r\n      notes\r\n    }\r\n  }\r\n`;\r\n\r\nconst UpdateOrder = gql`\r\n  mutation updateOrder($id: ID!, $name: String, $table: Int, $notes: String, $dishes: [orderDishMutation]){\r\n    updateOrder(_id: $id, table: $table, name: $name, dishes: $dishes, notes: $notes ){\r\n      _id, \r\n      name,\r\n      table,\r\n      notes\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class DetailContent extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.addDish = this.addDish.bind(this)\r\n    this.removeDish = this.removeDish.bind(this)\r\n    this.changeTextField = this.changeTextField.bind(this)\r\n    this.selectDish = this.selectDish.bind(this)\r\n\r\n    this.saveExtras = this.saveExtras.bind(this)\r\n  }\r\n\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    table: 0, \r\n    notes : \"\",\r\n    dishes: [],\r\n    activeTabIndex: 0,\r\n    dishTypes: {},\r\n    extras: {},\r\n    selectedChip: {}\r\n  } \r\n\r\n  componentDidMount(){\r\n    if (this.props.order)\r\n      this.setState({\r\n        id: this.props.order._id,\r\n        name: this.props.order.name,\r\n        table: this.props.order.table,\r\n        notes: this.props.order.notes,\r\n        dishes: this.props.order.dishes.map(d => {return {dish: {id: d.dish._id, name: d.dish.name, typeName: d.dish.type.name }, made: d.made, hasPayed: d.hasPayed, extras: d.extras, delivered: d.delivered}})\r\n      })\r\n      \r\n    const dishTypes = this.state.dishTypes\r\n    this.props.dishes.forEach(d => {\r\n      if (dishTypes[d.type.name]){\r\n        dishTypes[d.type.name].push(d)\r\n      } else {\r\n        dishTypes[d.type.name] = [d]\r\n      }\r\n    });\r\n\r\n    const extras = this.state.extras\r\n    this.props.extras.forEach(e => {\r\n      if (extras[e.type.name]) {\r\n        extras[e.type.name].push(e)\r\n      } else {\r\n        extras[e.type.name] = [e]\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      dishTypes: dishTypes,\r\n      extras: extras\r\n    })\r\n  }\r\n\r\n  addDish(id, name, typeName){\r\n    const dishes = [{ dish: { id, name, typeName }, made: false, hasPayed: false }].concat(this.state.dishes)\r\n    this.setState(\r\n      {\r\n        dishes: dishes\r\n      })\r\n  }\r\n\r\n  removeDish(){\r\n    const id = this.state.selectedDishId\r\n    let dishes = this.state.dishes\r\n\r\n    if (dishes.length < id) return\r\n    if (dishes[id].hasPayed || dishes[id].made) return\r\n\r\n    if (dishes.length === 1)\r\n      dishes = []\r\n    else \r\n      dishes.splice(id, 1)\r\n    this.setState({ dishes: dishes})\r\n  }\r\n\r\n  changeTextField(field){\r\n    return (e) =>{\r\n      const state = {}\r\n      state[field] = e.target.value\r\n      this.setState(state)\r\n    }\r\n  }\r\n\r\n  selectDish(id){\r\n    const { dishes } = this.state\r\n\r\n    if (!dishes || dishes.length < id) return;\r\n    const dish = dishes[id].dish;\r\n\r\n    if (dish.hasPayed || dish.made) return;\r\n\r\n    this.setState({\r\n      openDialog: true,\r\n      selectedDish: dish,\r\n      selectedDishId: id,\r\n      selectableExtras: this.state.extras[dishes[id].dish.typeName],\r\n      dishExtras: dishes[id].extras\r\n    })\r\n  }\r\n\r\n  saveExtras(extras){\r\n    const dishes = this.state.dishes;\r\n    const dish = dishes[this.state.selectedDishId];\r\n\r\n    dish.extras = extras\r\n\r\n    this.setState({\r\n      \"dishes\": dishes,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const keys = Object.keys(this.state.dishTypes).sort((a, b) => a < b ? -1: 1)\r\n    const { state, props, selectDish } = this\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <Grid className=\"order-details\">\r\n        <GridCell span=\"12\">\r\n          { keys.length === 0 ? String() : \r\n              <TabBar\r\n                activeTabIndex={state.activeTabIndex}\r\n                onActivate={evt => {\r\n                  this.setState({ 'activeTabIndex': evt.detail.index })\r\n                }}\r\n              >\r\n                {keys.map((v, i) => <Tab key={i}>{v}</Tab>)}\r\n              </TabBar>\r\n          }\r\n            <ChipSet choice>\r\n              {\r\n                (state.dishTypes[keys[state.activeTabIndex]] || []).sort((a, b) => a.name < b.name ? -1 : 1).map((v, i) =>\r\n                <Chip key={i} onClick={_ => this.addDish(v._id, v.name, keys[state.activeTabIndex])} label={v.name} checkmark selected={\r\n                  state.dishes.some(d => d.dish.id === v._id)\r\n                }/>\r\n              )}\r\n            </ChipSet>  \r\n\r\n        </GridCell>\r\n      </Grid>\r\n      <Grid className=\"order-details\">\r\n        <GridCell span=\"6\">\r\n          <List className=\"extendSecondaryText\">\r\n            {state.dishes.map((v, i) => \r\n                <SimpleListItem\r\n                  onClick={() => {\r\n                    if (v.hasPayed || v.made || v.delivered) return;\r\n                    selectDish(i)\r\n                  }}\r\n                  key={i}\r\n                  text={v.dish.name}\r\n                  secondaryText={(v.extras || []).map(e => e.name).join(\", \")}\r\n                  graphic={v.hasPayed ? \"euro_symbol\" : v.delivered ? \"done_all\" : v.made ? \"done\" : \"remove\"}\r\n                  ripple={false}\r\n                  activated={false}\r\n                  disabled={v.hasPayed || v.made || v.delivered}\r\n                />  \r\n            )}\r\n          </List>\r\n        </GridCell>\r\n        <GridCell span=\"6\">\r\n            <TextField icon=\"event_seat\" label=\"Table\" type=\"number\" min=\"0\" inputMode=\"numeric\" pattern=\"\\d*\" value={state.table} onChange={this.changeTextField(\"table\")} />\r\n            <TextField icon=\"account_circle\" label=\"Name\" value={state.name} onChange={this.changeTextField(\"name\")} />\r\n            <TextField textarea fullwidth label=\"Notes\" type=\"number\" value={state.notes} onChange={this.changeTextField(\"notes\")} />\r\n        </GridCell>\r\n      </Grid>\r\n      <Mutation mutation={props.id ? UpdateOrder : AddOrder}>\r\n      {(addOrUpdate, {data, loading, error}) => {\r\n          let result = <Button onClick={() => addOrUpdate({\r\n            variables: {\r\n              id: state.id,\r\n              table: state.table,\r\n              name: state.name,\r\n              notes: state.notes,\r\n              dishes: state.dishes.map(d => { return { id: d.dish.id, made: d.made, hasPayed: d.hasPayed, delivered: d.delivered, extras: (d.extras|| []).map(e => e._id)} }).filter(d => d && d.id)\r\n            }\r\n          })} theme=\"secondary\">Save</Button>\r\n\r\n          if (loading) \r\n            result = \r\n            <React.Fragment>\r\n              <LinearProgress />\r\n              {result}\r\n            </React.Fragment>\r\n          if (error) console.error(error);\r\n\r\n          if (data) props.history.goBack()\r\n\r\n          return result\r\n        }}\r\n        </Mutation>\r\n        <DetailExtraDialog \r\n          open={this.state.openDialog} \r\n          onClose={() => this.setState({openDialog: false})}\r\n          dish={this.state.selectedDish}\r\n          onDelete={this.removeDish}\r\n          onSave={this.saveExtras}\r\n          extras={this.state.selectableExtras}\r\n          selectedExtras={this.state.dishExtras}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar';\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\n\r\nimport DetailContent from \"../components/order-details/DetailContent\"\r\n\r\n\r\nexport default class OrderDetails extends Component {\r\n  fetchData(id, dishes, extras){\r\n    return <Query\r\n      query={gql`\r\n        query order($id: ID) {\r\n          orders(_id: $id) {\r\n            _id,\r\n            name,\r\n            table,\r\n            notes,\r\n            dishes {\r\n              dish {\r\n                _id,\r\n                name,\r\n                type {\r\n                  _id,\r\n                  name\r\n                }\r\n              }, \r\n              made,\r\n              hasPayed,\r\n              delivered,\r\n              extras {\r\n                _id,\r\n                name,\r\n                type {\r\n                  _id, \r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }`} variables={{ id }}>\r\n      {({ loading, error, data }) => {\r\n\r\n        if (loading) return <LinearProgress />;\r\n        if (error) {\r\n          console.error(error)\r\n          return <p>Error :( </p>;\r\n          }\r\n\r\n        return <DetailContent order={data.orders[0]} dishes={dishes} extras={extras} id={id} history={this.props.history} />\r\n      }}\r\n    </Query>      \r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Order Details</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <ToolbarIcon icon=\"clear\" onClick={() => this.props.history.goBack()}/>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n\r\n        <Query\r\n          query={gql`\r\n            {\r\n              dishes {\r\n                _id,\r\n                name,\r\n                type {\r\n                  _id,\r\n                  name\r\n                }\r\n              },\r\n              dishExtras {\r\n                _id,\r\n                name,\r\n                type {\r\n                  _id,\r\n                  name\r\n                }\r\n              }\r\n            }`}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <LinearProgress />;\r\n            if (error) {\r\n              return <p>Error :( <br /><br />{error.graphQLErrors.map(({ message }, i) => (\r\n              <span key={i}>{message}</span>))}</p>\r\n            };\r\n\r\n            if (id){\r\n              return this.fetchData(id, data.dishes, data.dishExtras)\r\n            }\r\n            return <DetailContent dishes={data.dishes} extras={data.dishExtras} history={this.props.history}/>\r\n\r\n          }} \r\n\r\n          </Query>\r\n      </Elevation>\r\n      )\r\n  }\r\n}","import React from \"react\"\r\nimport {Query} from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nfunction CreateReceipt(dishes, id) {\r\n  const totalCosts = dishes.reduce((a, c) => a + (c.extras || []).reduce((f, e) => f + e.cost, 0) + c.dish.cost, 0).toFixed(2)\r\n\r\n  return (\r\n    <Query\r\n      query={gql`{ company {\r\n                    name,\r\n                    street, \r\n                    postalCode,\r\n                    city, \r\n                    website,\r\n                    taxId\r\n                  }\r\n                }`}>\r\n      {({loading, error, data}) => {\r\n        if (!loading && !error && data){\r\n          const {name, street, postalCode, city, website, taxId} = data.company\r\n          const dateTime = new Date().toLocaleString(\"de\").split(',')\r\n          return (<div className=\"receipt\">\r\n            <div className=\"header\">\r\n              <h2>{name}</h2>\r\n              <p>{street}</p>\r\n              <p>{postalCode} {city}</p>\r\n              <p>{website}</p>\r\n              <p>{taxId}</p>\r\n            </div>\r\n            <table className=\"receipt\" align=\"center\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    Datum: {dateTime[0]}\r\n                  </td>\r\n                  <td>\r\n                    Zeit: {dateTime[1]}\r\n                  </td>\r\n                </tr>\r\n                <tr >\r\n                  <td className=\"bill-split\"></td>\r\n                  <td className=\"bill-split\"></td>\r\n                </tr>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>EUR</th>\r\n                </tr>\r\n                {dishes.map((d, idx) =>\r\n                  <tr key={idx}>\r\n                    <td>{d.dish.name}</td>\r\n                    <td>{(d.dish.cost + (d.extras || []).reduce((a, e) => a + e.cost, 0)).toFixed(2)}</td>\r\n                  </tr>\r\n                )}\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n                <tr >\r\n                  <td className=\"bill-split\"></td>\r\n                  <td className=\"bill-split\"></td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"bill-payment\">ANZAHL DER ARTIKEL {dishes.length}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>davon MwSt. (19%)</td>\r\n                  <td>{(totalCosts - (totalCosts / 1.19)).toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"bill-payment\"><h5>TOTAL</h5></td>\r\n                  <td className=\"bill-payment\">{totalCosts}</td>\r\n                </tr>\r\n                \r\n              </tbody>\r\n            </table >\r\n            <table className=\"receipt\" align=\"center\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    Bon: {id}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div >)}\r\n        return (<React.Fragment/>)\r\n\r\n      }}\r\n    </Query>\r\n  )\r\n}\r\n\r\nexport default CreateReceipt;","import React, { Component } from 'react'\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Button, ButtonIcon } from '@rmwc/button';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\n\r\nimport CreateReceipt from './CreateReciept'\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemGraphic,\r\n  ListItemMeta,\r\n  ListDivider,\r\n  ListItemSecondaryText,\r\n  ListItemPrimaryText\r\n} from '@rmwc/list';\r\n\r\nconst PAY = gql`\r\n  mutation pay($id: ID!, $dishes: [orderDishMutation]!, $amountPayed: Float!){\r\n    updateOrder(_id: $id, dishes: $dishes, amountPayed: $amountPayed){\r\n      _id,\r\n      dishes {\r\n        hasPayed\r\n      }\r\n    }\r\n  }`\r\n\r\nexport default class PayOrderContent extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.changePayment = this.changePayment.bind(this)\r\n    this.toggleSelection = this.toggleSelection.bind(this)\r\n    this.toggleAll = this.toggleAll.bind(this)\r\n  }\r\n\r\n  state = {\r\n    dishes: [],\r\n    paying: 0,\r\n    selectAll: true\r\n  }\r\n\r\n  static getDerivedStateFromProps(prop, state) {\r\n    if (prop.dishesToPay.length === 0) return null;\r\n    if (prop.dishesToPay.length === state.dishes.length) return null;\r\n\r\n    return({\r\n      dishes: prop.dishesToPay.map(m => ({\r\n        ...m,\r\n        paying: false\r\n      }))\r\n    })\r\n  }\r\n\r\n  toggleSelection(i){\r\n    return () => {\r\n      const dishes = this.state.dishes\r\n      dishes[i].paying = !dishes[i].paying\r\n      this.setState({\r\n        dishes: dishes,\r\n        selectAll: dishes.every(d => d.paying)\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleAll() {\r\n    const selected = !this.state.selectAll\r\n    const dishes = this.state.dishes\r\n\r\n    for (const dish of dishes) {\r\n      dish.paying = selected\r\n    }\r\n\r\n    this.setState({\r\n      dishes: dishes,\r\n      selectAll: selected\r\n    })\r\n  }\r\n\r\n  changePayment(){\r\n    return (e) => {\r\n      if (!isNaN(e.target.value))\r\n        this.setState({ paying: e.target.value})\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.setState({\r\n      dishes: this.props.dishesToPay\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { id } = this.props\r\n    const { paying, dishes, selectAll } = this.state\r\n    let total = 0\r\n    return (\r\n      <React.Fragment>\r\n        <List className=\"no-print\">\r\n          <ListItem key={-1} onClick={this.toggleAll}>\r\n            <ListItemGraphic icon={selectAll ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n            <ListItemText>Everything</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListDivider />\r\n          {dishes.map((v, i) => {\r\n            const extraCost = v.extras.reduce((a, e) => a + e.cost, 0);\r\n            if (v.paying)\r\n              total = v.dish.cost + total + extraCost\r\n          \r\n            return (\r\n            <ListItem key={i} onClick={this.toggleSelection(i)}>\r\n              <ListItemGraphic icon={v.paying ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n              <ListItemText>\r\n                <ListItemPrimaryText>{v.dish.name}</ListItemPrimaryText>\r\n                <ListItemSecondaryText>{v.extras.map(e => e.name).join(\", \")}</ListItemSecondaryText>\r\n              </ListItemText>\r\n              <ListItemMeta tag=\"span\" basename=\"\">{(v.dish.cost + extraCost).toFixed(2)}</ListItemMeta>\r\n            </ListItem>)\r\n          })}\r\n        \r\n        </List>\r\n        < Grid className = \"no-print\">\r\n          <GridCell span=\"12\">\r\n            <TextField icon=\"euro_symbol\" disabled label=\"Total\" value={total.toFixed(2)} />\r\n            <TextField icon=\"euro_symbol\" label=\"Difference\" value={(paying - total).toFixed(2)} onChange={() => {}} invalid={paying - total < 0} />\r\n            <TextField icon=\"euro_symbol\" label=\"Paying\" type=\"number\" inputMode=\"numeric\" pattern=\"\\d*.*,*\\d*\" value={paying} invalid={!paying} onChange={this.changePayment()}/>\r\n          </GridCell>\r\n        </Grid>\r\n        <div  className=\"no-print\">\r\n          <Mutation mutation={PAY}>\r\n            {(pay, { data, loading, error }) => {\r\n              let result = <Button onClick={() => {\r\n                pay({\r\n                variables: {\r\n                  id: this.props.id,\r\n                  dishes: dishes.map(d => {\r\n                    return {\r\n                      id: d.dish._id,\r\n                      made: d.made,\r\n                      hasPayed: d.paying,\r\n                      delivered: d.delivered,\r\n                      extras: d.extras.map(e => e._id)\r\n                    }\r\n                  }).concat(this.props.payedDishes.map(d => {\r\n                    return {\r\n                      id: d.dish._id,\r\n                      made: d.made,\r\n                      hasPayed: d.hasPayed,\r\n                      delivered: d.delivered,\r\n                      extras: d.extras.map(e => e._id)\r\n                    }\r\n                  })), \r\n                  amountPayed: paying\r\n                }\r\n              })\r\n              }\r\n              } disabled={!paying } > Pay </Button>\r\n\r\n              if (loading)\r\n                result =\r\n                  <React.Fragment>\r\n                    <LinearProgress />\r\n                    {result}\r\n                  </React.Fragment>\r\n              if (error) console.error(error);\r\n              if (data && data.updateOrder && data.updateOrder.dishes.reduce((a, c) => a && c.hasPayed, true)) {\r\n                this.props.history.goBack()\r\n              }\r\n\r\n              return result\r\n            }}\r\n          </Mutation>\r\n\r\n          <Button theme=\"secondary\" onClick={window.print}><ButtonIcon icon=\"receipt\"/>Print</Button>\r\n        </div>\r\n        <div className=\"print\">{CreateReceipt(dishes.filter(d => d.paying), id)}</div>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport PayOrderContent from \"../components/orders/PayOrderContent\"\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar';\r\n\r\nexport default class PayOrder extends Component{\r\n  render() {\r\n    const { id } = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Toolbar className=\"no-print\">\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Pay Order</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <ToolbarIcon icon=\"clear\" onClick={() => this.props.history.goBack()} />\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n\r\n        <Query\r\n          query={gql`\r\n                query order($id: ID) {\r\n                  orders(_id: $id) {\r\n                    _id,\r\n                    name,\r\n                    table,\r\n                    dishes {\r\n                      dish {\r\n                        _id,\r\n                        name,\r\n                        cost\r\n                      },\r\n                      hasPayed,\r\n                      made,\r\n                      delivered,\r\n                      extras {\r\n                        _id,\r\n                        cost,\r\n                        name\r\n                      }\r\n                    }\r\n                  }\r\n                }`} \r\n                variables={{ id }}\r\n                pollInterval={500}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <p>Error :(</p>;\r\n            \r\n            if (data.orders.length !== 1) return String()\r\n            return <PayOrderContent \r\n              history={this.props.history} \r\n              id={id} \r\n              payedDishes={data.orders[0].dishes.filter(d => d.hasPayed)} \r\n              dishesToPay={data.orders[0].dishes.filter(d => !d.hasPayed)\r\n                .map(d => {\r\n                  return {\r\n                    dish: d.dish,\r\n                    made: d.made,\r\n                    paying: true,\r\n                    delivered: d.delivered,\r\n                    extras: d.extras\r\n                  }\r\n                })\r\n                }\r\n                />\r\n          }}\r\n        </Query>\r\n      </Elevation>\r\n    )\r\n  }\r\n} ","import React, { Component } from 'react'\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog'\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Select } from '@rmwc/select';\r\n\r\nconst ADD = gql` mutation add($name: String!, $cost: Float!, $type: ID!){\r\n addDish(name: $name, cost: $cost, type: $type){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst UPDATE = gql`mutation update($id: ID!, $name: String, $cost: Float, $type: ID){\r\n updateDish(_id: $id, name: $name, cost: $cost, type: $type){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst REMOVE = gql`mutation remove($id: ID!){\r\n removeDish(_id: $id, ){\r\n   _id, \r\n   name\r\n }\r\n}`\r\n\r\nexport default class DishDialog extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { name: '', cost: 0.00, type: '' }\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleCostChange = this.handleCostChange.bind(this)\r\n    this.handleTypeChange = this.handleTypeChange.bind(this)\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps) {\r\n    if (newProps._id && (newProps.name !== oldProps.name || newProps.cost !== oldProps.cost || newProps.type._id !== oldProps.type._id)) {\r\n      this.setState({ name: newProps.name, cost: newProps.cost.toFixed(2), type: newProps.type._id })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props._id)\r\n      this.setState({ name: this.props.name, cost: this.props.cost.toFixed(2), type: this.props.type._id })\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    this.setState({ name: e.target.value || '' })\r\n  }\r\n\r\n  handleCostChange(e) {\r\n    this.setState({ cost: e.target.value })\r\n  }\r\n\r\n  handleTypeChange(e) {\r\n    this.setState({ type: e.target.value })\r\n  }\r\n\r\n  toggleDialog() {\r\n    return () => {\r\n      this.setState({ name: this.props.name || \"\", cost: this.props.cost || 0, type: this.props.type ? this.props.type._id : '', standardDialogOpen: !this.state.standardDialogOpen })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.onClose}\r\n      >\r\n          <DialogTitle>{this.props._id ? `Edit ${this.props.name}` : \"New dish\"}</DialogTitle>\r\n   \r\n          <DialogContent>\r\n            <TextField type=\"text\" label=\"Name\" value={this.state.name } onChange={this.handleNameChange} />\r\n            <TextField type=\"number\" inputMode=\"numeric\" label=\"Cost\" invalid={false} value={this.state.cost} onChange={this.handleCostChange} />\r\n            <Select\r\n              value={this.state.type}\r\n              onChange={this.handleTypeChange}\r\n              placeholder=\"\"\r\n              label=\"Dish type\"\r\n              options={this.props.dishTypes}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <DialogButton  theme=\"secondary\" action=\"close\" isDefaultAction>Cancel</DialogButton>\r\n            {\r\n              this.props._id ?\r\n                <Mutation mutation={REMOVE}>\r\n                  {(remove) =>\r\n                    <DialogButton action=\"accept\" onClick={() => remove({ variables: { id: this.props._id } }) }>Delete</DialogButton >\r\n                  }\r\n                </Mutation>\r\n                : String()\r\n            }\r\n            <Mutation mutation={this.props._id ? UPDATE : ADD}>\r\n              {(addOrUpdate) =>\r\n                <DialogButton action=\"accept\" onClick={() => {\r\n                  addOrUpdate({ variables: { id: this.props._id, name: this.state.name, type: this.state.type, cost: this.state.cost } })}}>Save</DialogButton>\r\n              }\r\n            </Mutation>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Elevation } from '@rmwc/elevation'; \r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List\r\n} from '@rmwc/list';\r\nimport DishDialog from './DishDialog';\r\n\r\nimport { SimpleListItem } from '@rmwc/list';\r\n\r\nexport default class DishCard extends Component {\r\n  state = {\r\n    device : {},\r\n    openDialog: false\r\n  }\r\n  render(){\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24} style={{margin: \"1rem\"}}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>{this.props.typeName}</ToolbarTitle>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        <List twoLine>\r\n          {this.props.dishes.map(d => \r\n            <SimpleListItem key={d._id} onClick={() => this.setState({device: d, openDialog: true})} text={d.name} secondaryText={`€ ${d.cost.toFixed(2)}`} metaIcon=\"edit\" />\r\n          )}\r\n        </List>\r\n        <DishDialog {...this.state.device} open={this.state.openDialog} dishTypes={this.props.dishTypes} onClose={() => {this.setState({openDialog: false})}}/>\r\n      </Elevation>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Masonry from 'react-masonry-component';\r\nimport { Fab } from '@rmwc/fab';\r\n\r\nimport DishCard from '../components/dishes/DishCard';\r\nimport DishDialog from '../components/dishes/DishDialog';\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nclass Dishes extends Component {\r\n  state = {\r\n    openDialog: false\r\n  }\r\n\r\n  groupBy(xs, func) {\r\n    return xs.reduce(function (rv, x) {\r\n      (rv[func(x)] = rv[func(x)] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  }\r\n\r\n  render() {\r\n    const filter = this.props.store.searchText\r\n    const matchesFilter = new RegExp(filter, \"i\")\r\n    return (\r\n      <Query\r\n        query={gql`query dishTypes {\r\n              dishTypes {\r\n                _id,\r\n                name\r\n                }\r\n              }`}\r\n        pollInterval={1000}>\r\n        {({ data }) => {\r\n          let dishTypes = []\r\n          if (data && data.dishTypes)\r\n            dishTypes = data.dishTypes.map(d => {return {label: d.name, value: d._id}})\r\n          return (\r\n            <React.Fragment>\r\n              <Query\r\n                query={gql`query dishes {\r\n                  dishes {\r\n                    _id,\r\n                    name,\r\n                    cost,\r\n                    type {\r\n                      _id,\r\n                      name\r\n                    }\r\n                  }\r\n                }`}\r\n                pollInterval={1000}>\r\n                {({ loading, error, data }) => {\r\n                  if (!data || !data.dishes)\r\n                    data = { dishes: [] }\r\n\r\n                  const grouped = this.groupBy(data.dishes.filter(o => {\r\n                    return (!filter || matchesFilter.test(o.name) || matchesFilter.test(o.type.name))\r\n                  }), d => d.type.name)\r\n\r\n                  const groupedDishes = []\r\n                  for (const group in grouped) {\r\n                    groupedDishes.push(<div\r\n                      key={grouped[group][0]._id}\r\n                      style={{\r\n                        width: '-webkit-fill-available',\r\n                        maxWidth: '500px',\r\n                        minWidth: '320px'\r\n                      }}>\r\n                      <DishCard typeName={group} dishes={grouped[group]} dishTypes={dishTypes} />\r\n                    </div>)\r\n                  }\r\n\r\n                  let result = \r\n                  <React.Fragment>\r\n                    <Masonry id=\"masonry-layout\">\r\n                      {groupedDishes}\r\n                    </Masonry>\r\n                    <Fab className=\"floating-right\" icon=\"add\"  onClick={() => this.setState({openDialog: true})} />\r\n                  </React.Fragment>\r\n\r\n                  if (loading) result =\r\n                    <React.Fragment>\r\n                      <LinearProgress />\r\n                      { result }\r\n                    </React.Fragment>\r\n                  if (error) return <p>Error :(</p>;\r\n\r\n                  return result\r\n\r\n                }}\r\n              </Query>\r\n              <DishDialog dishTypes={dishTypes} open={this.state.openDialog} onClose={() => this.setState({openDialog: false})}/>\r\n              <div className=\"bottomSpacer\" />\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(Dishes))","import React, { Component } from 'react'\r\nimport { observer, inject } from \"mobx-react\"\r\nimport {\r\n  List,\r\n  ListItem, \r\n  ListItemGraphic,\r\n  ListItemText\r\n} from '@rmwc/list';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\n\r\nclass GlobalSettings extends Component {\r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Global Settings</ToolbarTitle>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        \r\n        <List>\r\n          <ListItem onClick={() => this.props.store.setKitchenMode(!this.props.store.kitchenMode)}>\r\n            <ListItemGraphic icon={this.props.store.kitchenMode ? \"radio_button_checked\" : \"radio_button_unchecked\"}/>\r\n            <ListItemText>Kitchen Mode</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(GlobalSettings))","import React, { Component } from 'react'\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {  ToolbarIcon } from '@rmwc/toolbar';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog';\r\nimport { TextField } from '@rmwc/textfield';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemMeta } from '@rmwc/list';\r\n\r\nconst ADD = gql` mutation add($name: String!){\r\n addDishType(name: $name){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst UPDATE = gql`mutation update($id: ID!, $name: String!){\r\n updateDishType(_id: $id, name: $name){\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst REMOVE = gql`mutation remove($id: ID!){\r\n removeDishType(_id: $id, ){\r\n   _id, \r\n   name\r\n }\r\n}`\r\n\r\nexport default class DishTypeDialog extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {name: \"\"}\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n  }\r\n  \r\n\r\n  componentWillReceiveProps(newProps, oldProps){\r\n    if (newProps.name && newProps.name !== oldProps.name ){\r\n      this.setState({ name: newProps.name })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.name)\r\n      this.setState({ name: this.props.name })\r\n  }\r\n\r\n  toggleDialog(){\r\n    return () => {\r\n      this.setState({name: this.props.name, standardDialogOpen: !this.state.standardDialogOpen})\r\n    }\r\n  }\r\n\r\n  handleNameChange(e){\r\n    this.setState({name: e.target.value || ''})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <Dialog\r\n          open={this.state.standardDialogOpen}\r\n          onClose={evt => this.setState({ standardDialogOpen: false })}\r\n        >\r\n          <DialogTitle>{this.props._id ? \"Edit dish type\" : \"New dish type\"}</DialogTitle>\r\n            <DialogContent>\r\n              <TextField type=\"text\" label=\"Name\" value={this.state.name || ''} onChange={this.handleNameChange} />\r\n            </DialogContent>\r\n            <DialogActions >\r\n              <DialogButton  theme=\"secondary\" action=\"cancel\" isDefaultAction >Cancel</DialogButton>\r\n              {\r\n                this.props._id ?\r\n                  <Mutation mutation={REMOVE}>\r\n                    {(remove) =>\r\n                      <DialogButton action=\"accept\" onClick={() => remove({ variables: { id: this.props._id } })}>Delete</DialogButton>\r\n                    }\r\n                  </Mutation>\r\n                : String()\r\n              }\r\n              <Mutation mutation={this.props._id ? UPDATE : ADD}>\r\n                {(addOrUpdate) =>\r\n                  <DialogButton action=\"accept\" onClick={() => addOrUpdate({variables: { id: this.props._id, name: this.state.name}})}>Save</DialogButton>\r\n                }\r\n              </Mutation>\r\n            </DialogActions>\r\n        </Dialog>\r\n        {\r\n          this.props._id ?\r\n            <ListItem onClick={this.toggleDialog()}>\r\n              <ListItemText>{this.props.name}</ListItemText>\r\n              <ListItemMeta icon=\"edit\" />\r\n            </ListItem> :\r\n            <ToolbarIcon icon=\"add\" onClick={this.toggleDialog()} />\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List\r\n} from '@rmwc/list';\r\nimport DishTypeDialog from './DishTypeDialog';\r\n\r\nexport default class DishTypes extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>Dish types</ToolbarTitle>\r\n            </ToolbarSection>\r\n            <ToolbarSection alignEnd>\r\n              <DishTypeDialog />\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        <Query\r\n          query={gql`query dishTypes {\r\n              dishTypes {\r\n                _id,\r\n                name\r\n                }\r\n              }`}\r\n          variables={{ hasPayed: false }}\r\n          pollInterval={1000}>\r\n          {({ loading, error, data }) => {\r\n            if (!data || !data.dishTypes)\r\n              data = {dishTypes: []}\r\n\r\n            let result = <List>{\r\n                data.dishTypes.map(d => \r\n                  <DishTypeDialog key={d._id} {...d}/>\r\n                )}\r\n              </List>\r\n\r\n            if (loading) result =\r\n              <React.Fragment>\r\n                <LinearProgress />\r\n                {result}\r\n              </React.Fragment>\r\n            if (error) return <p>Error :(</p>;\r\n            return(result)\r\n            }\r\n          }\r\n          </Query>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Elevation } from '@rmwc/elevation';\r\nimport { Grid, GridCell } from '@rmwc/grid';\r\n\r\nimport GlobalSettings from '../components/settings/GlobalSettings'\r\nimport DishTypes from '../components/settings/DishTypes'\r\n\r\nexport default class Settings extends Component {\r\n  render(){\r\n    return(\r\n      <Grid>\r\n        <GridCell span=\"12\">\r\n          <Elevation className=\"main-elevation\" z={24}>\r\n            <GlobalSettings />\r\n\r\n          </Elevation>\r\n        </GridCell>\r\n        <GridCell span=\"12\">\r\n          <Elevation className=\"main-elevation\" z={24}>\r\n            <DishTypes />\r\n          </Elevation>\r\n        </GridCell>\r\n      </Grid>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Query} from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport {Elevation} from '@rmwc/elevation';\r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle,\r\n  ToolbarIcon\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryText,\r\n  ListItemMeta,\r\n  ListDivider\r\n} from '@rmwc/list';\r\nimport {LinearProgress} from '@rmwc/linear-progress';\r\nimport {Menu, MenuItem, MenuSurfaceAnchor} from '@rmwc/menu';\r\nimport FileSaver from \"filesaver.js-npm\"\r\n\r\nexport default class History extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setHistoryFilter = this.setHistoryFilter.bind(this)\r\n    this.getMonday = this.getMonday.bind(this)\r\n  }\r\n\r\n  state = {\r\n    menuIsOpen: false,\r\n    minOrderTimestamp: new Date(new Date().toDateString()),\r\n    header: \"Todays History\"\r\n  }\r\n\r\n  getMonday(d) {\r\n    d = new Date(d);\r\n    var day = d.getDay(),\r\n      diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\r\n    return new Date(d.setDate(diff));\r\n  }\r\n\r\n  downloadData(data, orders) {\r\n    const blob = new Blob(\r\n      [\"\\uFEFFid,timestamp,name,type,cost\\n\",\r\n        ...data.map(o => `${o.id},${o.timestamp.toISOString()},${o.name},${o.type},${o.cost}\\n`)], {encoding: \"UTF-8\", type: \"text/csv;charset=UTF-8\"})\r\n    FileSaver.saveAs(blob, `Dishes sold ${this.state.minOrderTimestamp.toISOString()}-${new Date().toISOString()}.csv`, true)\r\n    const orderBlob = new Blob(\r\n      [\"\\uFEFFid, timestamp, totalPayed\\n\",\r\n        ...orders.map(o => `${o._id},${new Date(o.timestamp).toISOString()},${(o.amountPayed || 0).toFixed(2)}\\n`)], {encoding: \"UTF-8\", type: \"text/csv;charset=UTF-8\"})\r\n    FileSaver.saveAs(orderBlob, `Orders sold ${this.state.minOrderTimestamp.toISOString()} -${new Date().toISOString()}.csv`, true)\r\n  }\r\n\r\n  setHistoryFilter(evt) {\r\n    let tmsp = new Date(\"0\");\r\n    let title = \"History\"\r\n\r\n    if (evt.detail.index === 1) {\r\n      tmsp = this.getMonday(new Date(new Date().toDateString()))\r\n      title = \"This weeks History\"\r\n    } else if (evt.detail.index === 2) {\r\n      tmsp = new Date(new Date().toDateString())\r\n      title = \"Todays History\"\r\n    }\r\n\r\n    this.setState({\r\n      minOrderTimestamp: tmsp,\r\n      header: title\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {id} = this.props.match.params\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24}>\r\n        <Query\r\n          query={gql`\r\n            {\r\n              orders(hasPayed: true) {\r\n                _id,\r\n                timestamp,\r\n                amountPayed,\r\n                dishes {\r\n                  dish {\r\n                    name,\r\n                    cost,\r\n                    type{\r\n                      name\r\n                    } \r\n                  }\r\n                }\r\n              }\r\n            }`}>\r\n          {({loading, error, data}) => {\r\n            if (loading) return <LinearProgress />;\r\n            if (error) return <p>Error :(</p>;\r\n\r\n            if (id) {\r\n              return this.fetchData(id, data.dishes)\r\n            }\r\n\r\n            let ordered = []\r\n            let total = 0\r\n            let totalWithTips = 0\r\n            let ordersInRange = []\r\n\r\n            if (data && data.orders)\r\n              ordersInRange = data.orders.filter(o => new Date(o.timestamp) >= this.state.minOrderTimestamp)\r\n              ordersInRange.forEach(o => {\r\n                const timestamp = new Date(o.timestamp)\r\n                o.dishes.forEach(d => {\r\n                    ordered.push({\r\n                      timestamp: timestamp,\r\n                      name: d.dish.name,\r\n                      cost: d.dish.cost.toFixed(2),\r\n                      type: d.dish.type.name,\r\n                      id: o._id\r\n                    })\r\n                  total = total + d.dish.cost\r\n                })\r\n                totalWithTips = totalWithTips + o.amountPayed || 0\r\n              })\r\n\r\n            return (\r\n              <React.Fragment>\r\n                <Toolbar>\r\n                  <ToolbarRow>\r\n                    <ToolbarSection alignStart>\r\n                      <ToolbarTitle>{this.state.header}</ToolbarTitle>\r\n                    </ToolbarSection>\r\n                    <ToolbarSection alignEnd>\r\n                      <MenuSurfaceAnchor>\r\n                        <Menu\r\n                          open={this.state.menuIsOpen}\r\n                          onSelect={this.setHistoryFilter}\r\n                          onClose={_ => this.setState({menuIsOpen: false})}\r\n                        >\r\n                          <MenuItem>Everything</MenuItem>\r\n                          <MenuItem>This Week</MenuItem>\r\n                          <MenuItem>Today</MenuItem>\r\n                        </Menu>\r\n\r\n                        < ToolbarIcon icon=\"filter_list\"\r\n                          onClick={evt => this.setState({'menuIsOpen': !this.state.menuIsOpen})}\r\n                        />\r\n                      </MenuSurfaceAnchor>\r\n                      <ToolbarIcon icon=\"cloud_download\" onClick={() => this.downloadData(ordered, ordersInRange)} />\r\n                    </ToolbarSection>\r\n                  </ToolbarRow>\r\n                </Toolbar>\r\n                <List>{\r\n                  ordered.map((o, i) =>\r\n                    <ListItem key={i} >\r\n                      <ListItemText>{o.name}\r\n                        <ListItemSecondaryText> {o.timestamp.toDateString()} </ListItemSecondaryText>\r\n                      </ListItemText>\r\n                      <ListItemMeta tag=\"span\" basename=\"\" >{`€ ${o.cost}`}</ListItemMeta>\r\n                    </ListItem>\r\n                  )}\r\n\r\n                  <ListDivider />\r\n\r\n                  <ListItem>\r\n                    <ListItemText>Total\r\n                      <ListItemSecondaryText>with tip: {`€ ${totalWithTips.toFixed(2)}`} </ListItemSecondaryText>\r\n                    </ListItemText>\r\n                    <ListItemMeta tag=\"span\" basename=\"\" >{`€ ${total.toFixed(2)}`}</ListItemMeta>\r\n                  </ListItem>\r\n                </List>\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Query>\r\n      </Elevation>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogButton\r\n} from '@rmwc/dialog'\r\nimport { TextField } from '@rmwc/textfield';\r\nimport { Select } from '@rmwc/select';\r\n\r\nconst ADD = gql` mutation add($name: String!, $cost: Float!, $type: ID!){\r\n addDishExtra(name: $name, cost: $cost, type: $type) {\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst UPDATE = gql `mutation update($id: ID!, $name: String!, $cost: Float!, $type: ID!){\r\n updateDishExtra(_id: $id, name: $name, cost: $cost, type: $type) {\r\n   _id, \r\n   name\r\n }\r\n}`\r\nconst REMOVE = gql`mutation remove($id: ID!){\r\n removeDishExtra(_id: $id, ) {\r\n   _id, \r\n   name\r\n }\r\n}`\r\n\r\nexport default class ExtraDialog extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { name: '', cost: 0.00, type: '' }\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleCostChange = this.handleCostChange.bind(this)\r\n    this.handleTypeChange = this.handleTypeChange.bind(this)\r\n  }\r\n\r\n  componentWillReceiveProps(newProps, oldProps) {\r\n    if (newProps._id && (newProps.name !== oldProps.name || newProps.cost !== oldProps.cost || newProps.type._id !== oldProps.type._id)) {\r\n      this.setState({ name: newProps.name, cost: newProps.cost.toFixed(2), type: newProps.type._id })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props._id)\r\n      this.setState({ name: this.props.name, cost: this.props.cost.toFixed(2), type: this.props.type._id })\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    this.setState({ name: e.target.value || '' })\r\n  }\r\n\r\n  handleCostChange(e) {\r\n    this.setState({ cost: e.target.value })\r\n  }\r\n\r\n  handleTypeChange(e) {\r\n    this.setState({ type: e.target.value })\r\n  }\r\n\r\n  toggleDialog() {\r\n    this.setState({ name: this.props.name || \"\", cost: this.props.cost || 0, type: this.props.type ? this.props.type._id : '', standardDialogOpen: !this.state.standardDialogOpen })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={ () => {\r\n          this.toggleDialog()\r\n          this.props.onClose()\r\n        }}\r\n      >\r\n          <DialogTitle>{this.props._id ? `Edit ${this.props.name}` : \"New extra for dish type\"}</DialogTitle>\r\n   \r\n          <DialogContent>\r\n            <TextField type=\"text\" label=\"Name\" value={this.state.name } onChange={this.handleNameChange} />\r\n            <TextField type=\"number\" inputMode=\"numeric\" label=\"Cost\" invalid={false} value={this.state.cost} onChange={this.handleCostChange} />\r\n            <Select\r\n              value={this.state.type}\r\n              onChange={this.handleTypeChange}\r\n              placeholder=\"\"\r\n              label=\"Dish type\"\r\n              options={this.props.dishTypes}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <DialogButton  theme=\"secondary\" action=\"cloase\" isDefaultAction>Cancel</DialogButton>\r\n            {\r\n              this.props._id ?\r\n                <Mutation mutation={REMOVE}>\r\n                  {(remove) =>\r\n                    <DialogButton action=\"accept\" onClick={() => remove({ variables: { id: this.props._id } }) }>Delete</DialogButton >\r\n                  }\r\n                </Mutation>\r\n                : String()\r\n            }\r\n            <Mutation mutation={this.props._id ? UPDATE : ADD}>\r\n              {(addOrUpdate) =>\r\n                <DialogButton action=\"accept\" onClick={() => {\r\n                  addOrUpdate({ variables: { id: this.props._id, name: this.state.name, type: this.state.type, cost: this.state.cost } })}}>Save</DialogButton>\r\n              }\r\n            </Mutation>\r\n          </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Elevation } from '@rmwc/elevation'; \r\nimport {\r\n  Toolbar,\r\n  ToolbarRow,\r\n  ToolbarSection,\r\n  ToolbarTitle\r\n} from '@rmwc/toolbar';\r\nimport {\r\n  List\r\n} from '@rmwc/list';\r\n\r\nimport { SimpleListItem } from '@rmwc/list';\r\nimport ExtraDialog from './ExtraDialog';\r\n\r\nexport default class DishCard extends Component {\r\n  state = {\r\n    extra : {},\r\n    openDialog: false\r\n  }\r\n  render(){\r\n    return (\r\n      <Elevation className=\"main-elevation\" z={24} style={{margin: \"1rem\"}}>\r\n        <Toolbar>\r\n          <ToolbarRow>\r\n            <ToolbarSection alignStart>\r\n              <ToolbarTitle>{this.props.typeName}</ToolbarTitle>\r\n            </ToolbarSection>\r\n          </ToolbarRow>\r\n        </Toolbar>\r\n        <List twoLine>\r\n          {this.props.extras.map(d => \r\n            <SimpleListItem key = {\r\n              d._id\r\n            }\r\n            onClick = {\r\n              () => this.setState({\r\n                extra: d,\r\n                openDialog: true\r\n              })\r\n            }\r\n            text = {\r\n              d.name\r\n            }\r\n            secondaryText = {\r\n              `€ ${d.cost.toFixed(2)}`\r\n            }\r\n            metaIcon = \"edit\" />\r\n          )}\r\n        </List>\r\n        < ExtraDialog {\r\n          ...this.state.extra\r\n        }\r\n        open = {\r\n          this.state.openDialog\r\n        }\r\n        dishTypes = {\r\n          this.props.dishTypes\r\n        }\r\n        onClose = {\r\n          () => {\r\n            this.setState({\r\n              openDialog: false\r\n            })\r\n          }\r\n        }\r\n        />\r\n      </Elevation>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Masonry from 'react-masonry-component';\r\nimport { Fab } from '@rmwc/fab';\r\nimport { LinearProgress } from '@rmwc/linear-progress';\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nimport ExtraCard from \"../components/extras/ExtraCard\";\r\nimport ExtraDialog from \"../components/extras/ExtraDialog\";\r\nclass DishExtra extends Component {\r\n  state = {\r\n    openDialog: false\r\n  }\r\n  \r\n  groupBy(xs, func) {\r\n    return xs.reduce(function (rv, x) {\r\n      (rv[func(x)] = rv[func(x)] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  }\r\n\r\n  render(){\r\n    const filter = this.props.store.searchText\r\n    const matchesFilter = new RegExp(filter, \"i\")\r\n    return (\r\n      <Query\r\n        query={gql`query dishTypes {\r\n              dishTypes {\r\n                _id,\r\n                name\r\n                }\r\n              }`}\r\n        pollInterval={5000}>\r\n        {({ data }) => {\r\n          let dishTypes = []\r\n          if (data && data.dishTypes)\r\n            dishTypes = data.dishTypes.map(d => {return {label: d.name, value: d._id}})\r\n          return (\r\n            <React.Fragment>\r\n              <Query\r\n                query = {\r\n                    gql `{\r\n                      dishExtras {\r\n                        _id, \r\n                        name, \r\n                        cost, \r\n                        type {\r\n                          _id,\r\n                          name\r\n                        }\r\n                      }\r\n                    }\r\n                `}\r\n                pollInterval={1000}>\r\n                {({ loading, error, data }) => {\r\n                  if (!data || !data.dishExtras)\r\n                    data = { dishExtras: []}\r\n\r\n                  const grouped = this.groupBy(data.dishExtras.filter(o => {\r\n                    return (!filter || matchesFilter.test(o.name) || matchesFilter.test(o.type.name))\r\n                  }), d => d.type.name)\r\n\r\n                  const groupedExtras = []\r\n                  for (const group in grouped){\r\n                    groupedExtras.push(<div\r\n                      key={grouped[group][0]._id}\r\n                      style={{\r\n                        width: '-webkit-fill-available',\r\n                        maxWidth: '500px',\r\n                        minWidth: '320px'\r\n                      }}>\r\n                        <ExtraCard typeName={group} extras={grouped[group]} dishTypes={dishTypes} />\r\n                    </div>)\r\n                  }\r\n\r\n                  let result = \r\n                  <React.Fragment>\r\n                    <Masonry id=\"masonry-layout\">\r\n                      {groupedExtras}\r\n                    </Masonry>\r\n                    <Fab className=\"floating-right\" icon=\"add\"  onClick={() => this.setState({openDialog: true})} />\r\n                  </React.Fragment>\r\n\r\n                  if (loading) result =\r\n                    <React.Fragment>\r\n                      <LinearProgress />\r\n                      { result }\r\n                    </React.Fragment>\r\n                  if (error) return <p>Error :(</p>;\r\n\r\n                  return result\r\n                }}\r\n                </Query>\r\n                < ExtraDialog dishTypes = {\r\n                  dishTypes\r\n                }\r\n                open = {\r\n                  this.state.openDialog\r\n                }\r\n                onClose = {\r\n                  () => this.setState({\r\n                    openDialog: false\r\n                  })\r\n                }/>\r\n            </React.Fragment>\r\n          )}\r\n        }\r\n      </Query>\r\n    )\r\n  }\r\n}\r\nexport default inject(\"store\")(observer(DishExtra))","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css';\n\nimport Nav from './components/navigation/Nav'\nimport Orders from './pages/Orders'\nimport OrderDetails from './pages/OrderDetails'\nimport PayOrder from './pages/PayOrder'\nimport Dishes from './pages/Dishes'\nimport Settings from './pages/Settings'\nimport Hist from './pages/History'\nimport Extras from './pages/DishExtra'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n \n        <div className=\"mdc-top-app-bar--fixed-adjust\">\n          <Route exact path=\"/\" component={ Orders } />\n          <Route path=\"/orders\" component={ Orders } />\n          <Route path=\"/orderDetails/:id?\" component={OrderDetails} />\n          <Route path=\"/payOrder/:id\" component={PayOrder} />\n          <Route path=\"/dishes\" component={Dishes} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/orderHistory\" component={Hist} />\n          <Route path=\"/dishExtra\" component={Extras} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  observable,\r\n  decorate\r\n} from \"mobx\"\r\n\r\nclass Store {\r\n  searchText = \"\"\r\n  kitchenMode = localStorage.getItem(\"Bit.KitchenMode\") === \"true\" || false\r\n \r\n  setKitchenMode(isOn) {\r\n    this.kitchenMode = isOn;\r\n    localStorage.setItem(\"Bit.KitchenMode\", isOn);\r\n  }\r\n}\r\n\r\ndecorate(Store, {\r\n  searchText: observable,\r\n  kitchenMode: observable\r\n})\r\n\r\nlet DefaultStore = new Store()\r\n\r\nexport default DefaultStore","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {HashRouter as Router} from 'react-router-dom'\r\nimport {Provider} from \"mobx-react\"\r\nimport ApolloClient from \"apollo-boost\";\r\nimport {ApolloProvider} from \"react-apollo\";\r\nimport Store from \"./stores/Store\"\r\nimport {ThemeProvider} from '@rmwc/theme';\r\n\r\nconst client = new ApolloClient();\r\n\r\nconst stores = {\r\n  store: Store\r\n}\r\n\r\nReactDOM.render(\r\n  <ThemeProvider options={\r\n    {\r\n      primary: '#795548',\r\n      secondary: '#486c79',\r\n      background: '#fff'\r\n    }\r\n  } >\r\n    <ApolloProvider client={client}>\r\n      <Provider {...stores}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </Provider>\r\n    </ApolloProvider>\r\n  </ThemeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}